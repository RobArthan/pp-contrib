=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ]{article}
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DRA FRONT END FILTER PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Proof of Security (IId)}  %% Mandatory field
\TPPref{DS/FMU/FEF/013}  %% Mandatory field
\def\SCCSversion{$Revision$
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$
}}  %% Mandatory field (with sensible default)
\TPPstatus{Approved}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{}
\TPPauthor{G.~M.~Prout & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.B.~Jones & HAT Manager}
\TPPabstract{This document provides a formal proof for the second  conjunct
of the security property
on the relationship between $hide$ and $updateState$ for the
DRA front end filter project RSRE 1C/6130.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	HAT FEF File \\
	Simon Wiseman
}}
%\TPPclass{CLASSIFICATION}
\newfont{\icllogo}{icllogo50}
\def\TPPheadlhs{$\vcenter{\halign{##\cr\icllogo ICL\cr}}$}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

%\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section {DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,fef}

\subsection{Changes History}
\begin{description}
\item[Issue \SCCSversion(\FormatDate{$Date$
})]First approved version.
\end{description}

\subsection{Changes Forecast}
None.
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document, together with \cite{DS/FMU/FEF/011} and \cite{DS/FMU/FEF/012}, provides a formal proof  that the components $hide$ and $updateState$ 
satisfy their critical 
requirements, as specified in 
the proof strategy \cite{DS/FMU/FEF/007}. It constitutes part of deliverable D6 
of work package 1c, as given
in section 7 of the Secure Database Technical Proposal, \cite{DS/FMU/017}.

\subsection{Introduction}

This document is a proof script which provides a formal proof which contributes to the proof
 of the second conjunct of $Lemma1$,
the requirement on the critical components  $hide$ and $updateState$, described in the proof strategy document \cite{DS/FMU/FEF/007}.

{\bf Lemma1}
=GFT 
	?Ù 	hide ç secureHide ± (hide,updateState) ç secureUpdate
=TEX


In this document, we give a proof that the second conjunct of $secureUpdate$ holds for $hideR$ and $updateStateR$:

=GFT
	?Ù µ câ1 câ2 sâ1 sâ2 e
          ∑ hideR (câ1, repState sâ1) = hideR (câ1, repState sâ2) ± câ1 dominates câ2
              ¥ hideR (câ1, Fst (updateStateR (câ2, e, repState sâ1)))
              = hideR (câ1, Fst (updateStateR (câ2, e, repState sâ2)))
=TEX


\section{PRELIMINARIES}
The following \Product{} instructions set up the new theory $fef013$.

=SML 
open_theory "fef012";
new_theory€"fef013"›;
push_merge_pcs["hol","wrk049","wrk049a","'pair1"] ;
=TEX
\section{PROOF OF CONJUNCT 2}


\subsection{Insert Rows Lemma}

=SML
push_goal([],¨µ câ1 câ2 tâ1 tâ2 ds ∑ 
	cleanTable câ1 tâ1 = cleanTable câ1 tâ2 ± câ1 dominates câ2  
	¥
	cleanTable câ1 (replaceRows tâ1
		((TS_rows tâ1) Î (Map((MkRow câ2) o (colDefaults câ2 tâ1))ds)))
	=
	cleanTable câ1 (replaceRows tâ2
		((TS_rows tâ2) Î (Map((MkRow câ2) o (colDefaults câ2 tâ2))ds)))Æ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 2 ante_tac THEN rewrite_tac
	[cleanTable_def,replaceRows_def,get_spec¨MkTableSpecÆ]);
a(cases_tac¨câ1 dominates TS_class tâ1ÆTHEN cases_tac¨câ1 dominates TS_class tâ2Æ
	THEN asm_rewrite_tac[]);
(* *** Goal "1" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]
	THEN REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN rewrite_tac[cleanRows_def,revealRow_def,map_Î_thm1]);
a ¥_tac;
=TEX
=SML
a(LEMMA_T¨Map
                 (cleanRow
                     câ1
                     {col
                       |∂ y
                         ∑ câ1 dominates CC_exist y
                             ± (CS_consGroup col, y) ç TS_cons tâ1})
                 (Map (MkRow câ2 o colDefaults câ2 tâ1) ds
                     ˘ {r|câ1 dominates R_exist r}) = 
	Map
                 (cleanRow
                     câ1
                     {col
                       |∂ y
                         ∑ câ1 dominates CC_exist y
                             ± (CS_consGroup col, y) ç TS_cons tâ2})
                 (Map (MkRow câ2 o colDefaults câ2 tâ2) ds
                     ˘ {r|câ1 dominates R_exist r})Æasm_rewrite_thm_tac);
a(POP_ASM_T (fn _ => id_tac));
a(REV_LIST_INDUCTION_T¨dsÆasm_tac);
=TEX
=SML
(* *** Goal "1.1" *** *)
a(rewrite_tac[map_def,˘_def]);
(* *** Goal "1.2" *** *)
a(rewrite_tac[˘_thm,get_spec¨MkRowÆ]);
a(µ_tac THEN GET_NTH_ASM_T 8 rewrite_thm_tac);
a(LEMMA_T¨cleanRow  câ1 {col
                   |∂ y
                     ∑ câ1 dominates CC_exist y
                         ± (CS_consGroup col, y) ç TS_cons tâ1}
                 (MkRow câ2 (colDefaults câ2 tâ1 last))
               = cleanRow câ1  {col
                   |∂ y
                     ∑ câ1 dominates CC_exist y
                         ± (CS_consGroup col, y) ç TS_cons tâ2}
                 (MkRow câ2 (colDefaults câ2 tâ2 last))Æasm_rewrite_thm_tac);
a(POP_ASM_T (fn _ => id_tac));
a(POP_ASM_T(strip_asm_tac o rewrite_rule[rel_ext_clauses]));
a(asm_rewrite_tac[colDefaults_def,cleanColCons_def,visibleCols_def,cleanRow_def,
	get_spec¨MkRowÆ,row_components,rel_ext_clauses,filterRow_def]);
a(REPEAT strip_tac);
=TEX
=SML
(* *** Goal "1.2.1" *** *)
a(cases_tac¨≥ x ç Dom{(n, d)
               |∂ c
                 ∑ ≥ (∂ y
                       ∑ câ2 dominates CC_exist y
                           ± (CS_consGroup c, y) ç TS_cons tâ1)
                     ± n = CS_posn c
                     ± d = CS_default c}Æ);
(* *** Goal "1.2.1.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
(* *** Goal "1.2.1.1.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.1.1.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.1.1.2" *** *)
a ≤_left_tac;
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨y''Æ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(∂_tac¨y'''ÆTHEN asm_rewrite_tac[]);
a(lemma_tac¨câ1 dominates CC_exist y'''Æ);
=TEX
=SML
(* *** Goal "1.2.1.1.1.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.1.1.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y'''Æ]);
(* *** Goal "1.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨zÆ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(spec_nth_asm_tac 7 ¨y''Æ);
(* *** Goal "1.2.1.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
=TEX
=SML
(* *** Goal "1.2.1.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.2.2" *** *)
a ≤_right_tac;
a(∂_tac¨c'ÆTHEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨y''Æ);
a contr_tac;
a(lemma_tac¨câ1 dominates CC_exist y''Æ);
(* *** Goal "1.2.1.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.2.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y''Æ]);
=TEX
=SML
(* *** Goal "1.2.2" *** *)
a(cases_tac¨≥ x ç Dom{(n, d)
               |∂ c
                 ∑ ≥ (∂ y
                       ∑ câ2 dominates CC_exist y
                           ± (CS_consGroup c, y) ç TS_cons tâ2)
                     ± n = CS_posn c
                     ± d = CS_default c}Æ);
(* *** Goal "1.2.2.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
(* *** Goal "1.2.2.1.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.2.1.1.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.1.1.2" *** *)
a ≤_left_tac;
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨y''Æ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(∂_tac¨y'''ÆTHEN asm_rewrite_tac[]);
a(lemma_tac¨câ1 dominates CC_exist y'''Æ);
(* *** Goal "1.2.2.1.1.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.1.1.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y'''Æ]);
(* *** Goal "1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨zÆ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(spec_nth_asm_tac 7 ¨y''Æ);
=TEX
=SML
(* *** Goal "1.2.2.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.2.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.2.2" *** *)
a ≤_right_tac;
a(∂_tac¨c'ÆTHEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨y''Æ);
a contr_tac;
a(lemma_tac¨câ1 dominates CC_exist y''Æ);
(* *** Goal "1.2.2.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.2.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y''Æ]);
=TEX
=SML
(* *** Goal "2" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]
	THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
(* *** Goal "3" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]
	THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
val €cleanTable_insertRows_lemma› = save_pop_thm"cleanTable_insertRows_lemma";
=TEX
=GFT HOL output
cleanTable_insertRows_lemma = 
Ù µ câ1 câ2 tâ1 tâ2 ds
  ∑ cleanTable câ1 tâ1 = cleanTable câ1 tâ2 ± câ1 dominates câ2
      ¥ cleanTable
          câ1
          (replaceRows
              tâ1
              (TS_rows tâ1 Î Map (MkRow câ2 o colDefaults câ2 tâ1) ds))
        = cleanTable
          câ1
          (replaceRows
              tâ2
              (TS_rows tâ2 Î Map (MkRow câ2 o colDefaults câ2 tâ2) ds))
=TEX

\subsection{Delete Rows Lemmas}

=SML
push_goal([],¨µ c l x∑ Extract
                       (1 .. # (l Î [x])
                           \ Squash (Id(Dom(ListRel (l  Î [x]) í {r|c dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (l Î [x]) i) = c}) (l Î [x])              
	=	if  # l + 1 ç (1 .. # (l Î [x])
                           \ Squash (Id(Dom(ListRel (l  Î [x]) í {r|c dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (l Î [x]) i) = c})
		then
		(Extract
                       (1 .. # l
                           \ Squash (Id(Dom(ListRel l í {r|c dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth l i) = c}) l) Î [x]
		else
		(Extract
                       (1 .. # l
                           \ Squash (Id(Dom(ListRel l í {r|c dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth l i) = c}) l)Æ);
=TEX
=SML
a(REPEAT strip_tac THEN rewrite_tac[extract_Î_single_ax]);
a(cases_tac¨c dominates R_exist xÆTHEN 
	asm_rewrite_tac[squash_Î_thm,image_¿_thm,¿_°_thm]);
(* *** Goal "1" *** *)
a(CASES_T¨ # l + 1
                   ç 1 .. # (l Î [x])
                     \ Squash
                             (Id (Dom (ListRel l í {r|c dominates R_exist r})))
                           Image ns
                         ° {i|R_exist (Nth (l Î [x]) i) = c}
                       ¿ {(#
                                     (Squash
                                         (Id
                                             (Dom
                                                 (ListRel l
                                                     í {r
                                                     |c
                                                         dominates R_exist
                                                           r}))))
                                   + 1, # l + 1)}
                           Image ns
                         ° {i|R_exist (Nth (l Î [x]) i) = c}Ærewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.1 & 1.2"*** *)
a(rewrite_tac[extract_def]);
a(LEMMA_T¨(1 .. # (l Î [x])
                         \ Squash
                                 (Id
                                     (Dom
                                         (ListRel l
                                             í {r|c dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (l Î [x]) i) = c}
                           ¿ {(#
                                         (Squash
                                             (Id
                                                 (Dom
                                                     (ListRel l
                                                         í {r
                                                         |c
                                                             dominates R_exist
           r}))))
                                       + 1, # l + 1)}
                               Image ns
                             ° {i|R_exist (Nth (l Î [x]) i) = c}
                       Ú ListRel l) = (1 .. # l
                         \ Squash
                               (Id
                                   (Dom
                                       (ListRel l
                                           í {r|c dominates R_exist r})))
                             Image ns
                           ° {i|R_exist (Nth l i) = c}
                       Ú ListRel l)Ærewrite_thm_tac);
=TEX
=SML
a(rewrite_tac[rel_ext_clauses,Ú_def,í_def,list_rel_def,image_def,dot_dot_def,
	º_plus1_thm,length_Î_one_thm]);
a(REPEAT strip_tac);
(* *** Goal "1.1.1" *** *)
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.2" *** *)
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.3" *** *)
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.4" *** *)
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.5" *** *)
a(spec_nth_asm_tac 5 ¨x''Æ);
(* *** Goal "1.1.6" *** *)
a(spec_nth_asm_tac 5 ¨x''Æ);
=TEX
=SML
(* *** Goal "1.1.7" *** *)
a(strip_asm_tac(rewrite_rule[dot_dot_def](list_µ_elim[¨lÆ,¨x'Æ,¨xÆ]nth_Î_thm1)));
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.8" *** *)
a(strip_asm_tac(rewrite_rule[dot_dot_def](list_µ_elim[¨lÆ,¨x'Æ,¨xÆ]nth_Î_thm1)));
a(DROP_NTH_ASM_T 5 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.9" *** *)
a(spec_nth_asm_tac 4 ¨x''Æ);
(* *** Goal "1.1.10" *** *)
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.11" *** *)
a(strip_asm_tac(rewrite_rule[dot_dot_def](list_µ_elim[¨lÆ,¨x'Æ,¨xÆ]nth_Î_thm1)));
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.1.12" *** *)
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "2" *** *)
a(CASES_T¨ # l + 1
                   ç 1 .. # (l Î [x])
                     \ Squash
                           (Id (Dom (ListRel l í {r|c dominates R_exist r})))
                         Image ns
                       ° {i|R_exist (Nth (l Î [x]) i) = c}Æ rewrite_thm_tac);
=TEX
=SML
(* *** Goal "2.1 & 2.2" *** *)
a(rewrite_tac[extract_def]);
a(LEMMA_T¨(1 .. # (l Î [x])
                         \ Squash
                               (Id
                                   (Dom
                                       (ListRel l
                                           í {r|c dominates R_exist r})))
                             Image ns
                           ° {i|R_exist (Nth (l Î [x]) i) = c}
                       Ú ListRel l)=(1 .. # l
                         \ Squash
                               (Id
                                   (Dom
                                       (ListRel l
                                           í {r|c dominates R_exist r})))
                             Image ns
                           ° {i|R_exist (Nth l i) = c}
                       Ú ListRel l)Ærewrite_thm_tac);
=TEX
=SML
a(rewrite_tac[rel_ext_clauses,Ú_def,í_def,list_rel_def,image_def,dot_dot_def,
	º_plus1_thm,length_Î_one_thm]);
a(REPEAT strip_tac);
(* *** Goal "2.1.1" *** *)
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "2.1.2" *** *)
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "2.1.3" *** *)
a(spec_nth_asm_tac 4 ¨x''Æ);
(* *** Goal "2.1.4" *** *)
a(strip_asm_tac(rewrite_rule[dot_dot_def](list_µ_elim[¨lÆ,¨x'Æ,¨xÆ]nth_Î_thm1)));
a(DROP_NTH_ASM_T 5 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "2.1.5" *** *)
a(spec_nth_asm_tac 4 ¨x''Æ);
(* *** Goal "2.1.6" *** *)
a(strip_asm_tac(rewrite_rule[dot_dot_def](list_µ_elim[¨lÆ,¨x'Æ,¨xÆ]nth_Î_thm1)));
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[]);
val €extract_Î_single_lemma› = save_pop_thm"extract_Î_single_lemma";
=TEX
=GFT HOL output
extract_Î_single_lemma = 
Ù µ c l x
  ∑ Extract
        (1 .. # (l Î [x])
            \ Squash
                  (Id (Dom (ListRel (l Î [x]) í {r|c dominates R_exist r})))
                Image ns
              ° {i|R_exist (Nth (l Î [x]) i) = c})
        (l Î [x])
      = (if
          # l + 1
            ç 1 .. # (l Î [x])
              \ Squash
                    (Id
                        (Dom
                            (ListRel (l Î [x]) í {r|c dominates R_exist r})))
                  Image ns
                ° {i|R_exist (Nth (l Î [x]) i) = c}
        then
          Extract
              (1 .. # l
                  \ Squash (Id (Dom (ListRel l í {r|c dominates R_exist r})))
                      Image ns
                    ° {i|R_exist (Nth l i) = c})
              l
            Î [x]
        else
          Extract
            (1 .. # l
                \ Squash (Id (Dom (ListRel l í {r|c dominates R_exist r})))
                    Image ns
                  ° {i|R_exist (Nth l i) = c})
            l)
=TEX

=SML
push_goal([],¨µ lâ1 lâ2 câ1 câ2 s ∑ 
	câ1 dominates câ2 
	±
	Map(cleanRow câ1 s)(lâ1 ˘ {r|câ1 dominates R_exist r})
	= 
	Map(cleanRow câ1 s)(lâ2 ˘ {r|câ1 dominates R_exist r}) 
	¥
		Map(cleanRow câ2 s)(lâ1 ˘ {r|câ2 dominates R_exist r})
		= 
		Map(cleanRow câ2 s)(lâ2 ˘ {r|câ2 dominates R_exist r})Æ);
=TEX
=SML
a(REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN intro_µ_tac(¨lâ1Æ,¨lâ1Æ));
a(LIST_INDUCTION_T¨lâ2Æasm_tac);
(* *** Goal "1" *** *)
a(rewrite_tac[map_def,all_µ_intro(eq_sym_rule(all_µ_elim list_rel_list_thm))]);
a(rewrite_tac[rel_ext_clauses]THEN REPEAT strip_tac);
a contr_tac;
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "2" *** *)
a(REPEAT µ_tac);
a(intro_µ_tac(¨xÆ,¨xÆ));
a(LIST_INDUCTION_T¨lâ1Æasm_tac);
a(rewrite_tac[map_def]);
=TEX
=SML
(* *** Goal "2.1" *** *)
a(rewrite_tac[map_def,all_µ_intro(eq_sym_rule(all_µ_elim list_rel_list_thm))]);
a(rewrite_tac[rel_ext_clauses]THEN REPEAT strip_tac);
a contr_tac;
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "2.2" *** *)
a(rewrite_tac[˘_def]);
a(REPEAT µ_tac);
a(cases_tac¨câ2 dominates R_exist xÆTHEN cases_tac¨câ2 dominates R_exist x'Æ
	THEN asm_rewrite_tac[map_def]);
(* *** Goal "2.2.1" *** *)
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
a(asm_rewrite_tac[map_def]THEN strip_tac);
a(DROP_NTH_ASM_T 11 (ante_tac o µ_elim¨lâ1Æ)THEN asm_rewrite_tac[]
	THEN strip_tac THEN asm_rewrite_tac[]);
a(DROP_NTH_ASM_T 3 ante_tac THEN rewrite_tac
	[cleanRow_def,row_components,get_spec¨MkRowÆ]);
a(rewrite_tac[rel_ext_clauses]THEN REPEAT strip_tac);
=TEX
=SML
(* *** Goal "2.2.1.1" *** *)
a(DROP_NTH_ASM_T 3 (asm_tac o list_µ_elim[¨x''Æ,¨replaceData câ1 zÆ]));
a(LEMMA_T¨(∂ z'
             ∑ (x'', z') ç filterRow s (R_data x)
                 ± replaceData câ1 z = replaceData câ1 z')Æasm_tac);
(* *** Goal "2.2.1.1.1" *** *)
a(∂_tac¨zÆ THEN asm_rewrite_tac[]);
(* *** Goal "2.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'Æ THEN asm_rewrite_tac[]);
a(fc_tac[replaceData_lemma] THEN asm_fc_tac[]);
(* *** Goal "2.2.1.2" *** *)
a(DROP_NTH_ASM_T 3 (asm_tac o list_µ_elim[¨x''Æ,¨replaceData câ1 zÆ]));
a(LEMMA_T¨(∂ z'
             ∑ (x'', z') ç filterRow s (R_data x')
                 ± replaceData câ1 z = replaceData câ1 z')Æasm_tac);
(* *** Goal "2.2.1.2.1" *** *)
a(∂_tac¨zÆ THEN asm_rewrite_tac[]);
(* *** Goal "2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'Æ THEN asm_rewrite_tac[]);
a(fc_tac[replaceData_lemma] THEN asm_fc_tac[]);
=TEX
=SML
(* *** Goal "2.2.2" *** *)
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
a(cases_tac¨câ1 dominates R_exist x'ÆTHEN asm_rewrite_tac[map_def,˘_def]);
(* *** Goal "2.2.2.1" *** *)
a strip_tac;
a(DROP_NTH_ASM_T 2
	(ante_tac o rewrite_rule[cleanRow_def,row_components,get_spec¨MkRowÆ]));
a strip_tac;
a(DROP_NTH_ASM_T 9 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "2.2.2.2" *** *)
a strip_tac;
a(DROP_NTH_ASM_T 9(ante_tac o µ_elim¨Cons x lâ1Æ));
a(asm_rewrite_tac[˘_def,map_def]);
=TEX
=SML
(* *** Goal "2.2.3" *** *)
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
a(cases_tac¨câ1 dominates R_exist xÆTHEN asm_rewrite_tac[map_def,˘_def]);
(* *** Goal "2.2.3.1" *** *)
a strip_tac;
a(DROP_NTH_ASM_T 2
	(ante_tac o rewrite_rule[cleanRow_def,row_components,get_spec¨MkRowÆ]));
a strip_tac;
a(DROP_NTH_ASM_T 9 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "2.2.3.2" *** *)
a strip_tac;
a(DROP_NTH_ASM_T 8(ante_tac o µ_elim¨x'Æ));
a(asm_rewrite_tac[˘_def,map_def]);
=TEX
=SML
(* *** Goal "2.2.4" *** *)
a(cases_tac ¨câ1 dominates R_exist xÆTHEN cases_tac ¨câ1 dominates R_exist x'Æ
	THEN asm_rewrite_tac[map_def,˘_def]);
(* *** Goal "2.2.4.1" *** *)
a(strip_tac THEN DROP_NTH_ASM_T 8(ante_tac o µ_elim¨lâ1Æ)THEN asm_rewrite_tac[]);
(* *** Goal "2.2.4.2" *** *)
a(strip_tac THEN DROP_NTH_ASM_T 7(ante_tac o µ_elim¨Cons x lâ1Æ)
	THEN asm_rewrite_tac[map_def,˘_def]);
(* *** Goal "2.2.4.3" *** *)
a(strip_tac THEN DROP_NTH_ASM_T 6(ante_tac o µ_elim¨x'Æ)
	THEN asm_rewrite_tac[map_def,˘_def]);
val €map_cleanRow_lemma1› = save_pop_thm"map_cleanRow_lemma1";
=TEX
=GFT HOL output
map_cleanRow_lemma1 = 
Ù µ lâ1 lâ2 câ1 câ2 s
  ∑ câ1 dominates câ2
        ± Map (cleanRow câ1 s) (lâ1 ˘ {r|câ1 dominates R_exist r})
          = Map (cleanRow câ1 s) (lâ2 ˘ {r|câ1 dominates R_exist r})
      ¥ Map (cleanRow câ2 s) (lâ1 ˘ {r|câ2 dominates R_exist r})
        = Map (cleanRow câ2 s) (lâ2 ˘ {r|câ2 dominates R_exist r})
=TEX
=SML
push_goal([],¨µ lâ1 lâ2 câ1 câ2 s ∑ 
	câ1 dominates câ2 
	±
	Map(cleanRow câ1 s)(lâ1 ˘ {r|câ1 dominates R_exist r})
	= 
	Map(cleanRow câ1 s)(lâ2 ˘ {r|câ1 dominates R_exist r}) 
	¥
		# (ListRel lâ1 í {r|câ2 dominates R_exist r})
		= 
		# (ListRel lâ2 í {r|câ2 dominates R_exist r})Æ);
=TEX
=SML
a(REPEAT strip_tac);
a(fc_tac[map_cleanRow_lemma1]THEN asm_fc_tac[]);
a(DROP_NTH_ASM_T 2 (fn _ => id_tac)THEN DROP_NTH_ASM_T 2 (fn _ => id_tac));
a(POP_ASM_T ante_tac);
a(intro_µ_tac(¨lâ2Æ,¨lâ2Æ));
a(REV_LIST_INDUCTION_T¨lâ1Æasm_tac);
(* *** Goal "1" *** *)
a(rewrite_tac[map_def]);
a(µ_tac THEN ¥_T (asm_tac o rewrite_rule
	[all_µ_intro(eq_sym_rule(all_µ_elim list_rel_list_thm))]));
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "2" *** *)
a(REPEAT µ_tac);
a(intro_µ_tac(¨lastÆ,¨lastÆ));
a(REV_LIST_INDUCTION_T¨lâ2Æasm_tac);
(* *** Goal "2.1" *** *)
a(rewrite_tac[map_def]);
a(µ_tac THEN cases_tac¨câ2 dominates R_exist lastÆ THEN  asm_rewrite_tac[]);
a(¥_T (asm_tac o rewrite_rule[all_µ_intro(eq_sym_rule(all_µ_elim list_rel_list_thm))]));
a(asm_rewrite_tac[list_rel_Î_singleton_thm]);
=TEX
=SML
(* *** Goal "2.2" *** *)
a(REPEAT µ_tac);
a(cases_tac¨câ2 dominates R_exist last'Æ
	 THEN cases_tac¨câ2 dominates R_exist lastÆ THEN asm_rewrite_tac[]);
(* *** Goal "2.2.1" *** *)
a(¥_tac THEN DROP_NTH_ASM_T 6 (ante_tac o µ_elim¨lâ2Æ) THEN asm_rewrite_tac[]
	THEN ¥_tac);
a(asm_rewrite_tac[list_rel_Î_singleton_thm]);
a(lemma_tac¨µ l last ∑ (ListRel l í {r|câ2 dominates R_exist r}) ° {(# l + 1, last)} 
	= {}Æ);
(* *** Goal "2.2.1.1" *** *)
a(REPEAT µ_tac THEN rewrite_tac[list_rel_def,í_def,dot_dot_def,rel_ext_clauses]);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "2.2.1.2" *** *)
a(TOP_ASM_T (asm_tac o list_µ_elim[¨lâ1Æ,¨last'Æ]));
a(asm_tac(list_µ_elim[¨lâ1Æ,¨{r|câ2 dominates R_exist r}Æ]fin_list_rel_í_thm));
a(asm_tac(µ_elim¨(# lâ1 + 1, last')Æfin_set_thm5));
a(ante_tac(list_µ_elim[¨ListRel lâ1 í {r|câ2 dominates R_exist r}Æ,
	¨{(# lâ1 + 1, last')}Æ]size_thm7)THEN asm_rewrite_tac[size_thm1,size_singleton_thm]);
a(¥_T rewrite_thm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨lâ2Æ,¨lastÆ]));
a(asm_tac(list_µ_elim[¨lâ2Æ,¨{r|câ2 dominates R_exist r}Æ]fin_list_rel_í_thm));
a(asm_tac(µ_elim¨(# lâ2 + 1, last)Æfin_set_thm5));
a(ante_tac(list_µ_elim[¨ListRel lâ2 í {r|câ2 dominates R_exist r}Æ,
	¨{(# lâ2 + 1, last)}Æ]size_thm7)THEN asm_rewrite_tac[size_thm1,size_singleton_thm]);
a(¥_T asm_rewrite_thm_tac);
=TEX
=SML
(* *** Goal "2.2.2" *** *)
a(DROP_NTH_ASM_T 3(ante_tac o µ_elim¨last'Æ)THEN asm_rewrite_tac[]);
a(¥_T asm_tac THEN ¥_tac);
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]THEN strip_tac);
a(asm_rewrite_tac[list_rel_Î_í_thm]);
(* *** Goal "2.2.3" *** *)
a(DROP_NTH_ASM_T 4(ante_tac o µ_elim¨lâ2 Î [last]Æ) THEN asm_rewrite_tac[]);
a(¥_T asm_tac THEN ¥_tac);
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]THEN strip_tac);
a(asm_rewrite_tac[list_rel_Î_í_thm]);
(* *** Goal "2.2.4" *** *)
a(asm_rewrite_tac[list_rel_Î_í_thm]);
val €map_cleanRow_lemma2› = save_pop_thm"map_cleanRow_lemma2";
=TEX
=GFT HOL output
map_cleanRow_lemma2 = 
Ù µ lâ1 lâ2 câ1 câ2 s
  ∑ câ1 dominates câ2
        ± Map (cleanRow câ1 s) (lâ1 ˘ {r|câ1 dominates R_exist r})
          = Map (cleanRow câ1 s) (lâ2 ˘ {r|câ1 dominates R_exist r})
      ¥ # (ListRel lâ1 í {r|câ2 dominates R_exist r})
        = # (ListRel lâ2 í {r|câ2 dominates R_exist r})
=TEX
=SML
push_goal([],¨µ câ1 câ2 tâ1 tâ2 ns ∑ 
	cleanTable câ1 tâ1 = cleanTable câ1 tâ2 
	± câ1 dominates câ2 ± câ2 dominates TS_class tâ1 
	¥
	cleanTable câ1 (replaceRows tâ1 
		(Extract (1 .. #(TS_rows tâ1) \ 
	((revealRow câ2 tâ1) Image ns ° {i|R_exist(Nth(TS_rows tâ1)i) = câ2}))
	(TS_rows tâ1)))
	=
	cleanTable câ1 (replaceRows tâ2 
		(Extract (1 .. #(TS_rows tâ2) \ 
	((revealRow câ2 tâ2) Image ns ° {i|R_exist(Nth(TS_rows tâ2)i) = câ2}))
	(TS_rows tâ2)))Æ);
a(REPEAT strip_tac);
a(lemma_tac¨cleanTable câ2 tâ1 = cleanTable câ2 tâ2Æ
	THEN_LIST[fc_tac[cleanTable_lemma]
	THEN asm_fc_tac[],id_tac]);
a(DROP_NTH_ASM_T 4 ante_tac THEN  
	rewrite_tac[cleanTable_def,replaceRows_def,get_spec¨MkTableSpecÆ]);
a(lemma_tac¨câ1 dominates TS_class tâ1ÆTHEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(cases_tac¨câ1 dominates TS_class tâ2ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
set_labelled_goal"2";
(* *** Goal "2" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]
	THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1" *** *)
a(¥_T(strip_asm_tac o rewrite_rule[get_spec¨MkTableSpecÆ,tab_components]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[cleanTable_def]);
a(GET_NTH_ASM_T 8 ante_tac THEN GET_NTH_ASM_T 5 rewrite_thm_tac 
	THEN ¥_tac
	THEN asm_rewrite_tac[get_spec¨MkTableSpecÆ,tab_components] THEN strip_tac);
a(POP_ASM_T ante_tac THEN lemma_tac¨cleanColCons câ2 tâ1 = cleanColCons câ2 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 3(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 2(fn _ => id_tac)]);
a(asm_rewrite_tac[] THEN ¥_tac);
a(lemma_tac¨cleanColCons câ1 tâ1 = cleanColCons câ1 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 7(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 6(fn _ => id_tac)]);
a(DROP_NTH_ASM_T 5 ante_tac THEN asm_rewrite_tac[] THEN ¥_tac);
=TEX
=SML
a(fc_tac[cleanRows_size_lemma]);
a(LIST_DROP_NTH_ASM_T [1,2,3,4](MAP_EVERY ante_tac));
a(LIST_DROP_NTH_ASM_T [1,2](MAP_EVERY (fn _ => id_tac)));
a(rewrite_tac[cleanColCons_def,cleanRows_def,revealRow_def,get_spec¨MkTableSpecÆ]);
a(REPEAT strip_tac);
a(LIST_DROP_NTH_ASM_T [1,2,3](MAP_EVERY ante_tac));
a(lemma_tac¨∂ lâ1 ∑ TS_rows tâ1 = lâ1ÆTHEN_LIST
	[prove_∂_tac,POP_ASM_T rewrite_thm_tac]);
a(lemma_tac¨∂ lâ2 ∑ TS_rows tâ2 = lâ2ÆTHEN_LIST
	[prove_∂_tac,POP_ASM_T rewrite_thm_tac]);
a(intro_µ_tac(¨lâ2Æ,¨lâ2Æ));
a(REV_LIST_INDUCTION_T¨lâ1Æasm_tac);
=TEX
=SML
(* *** Goal "1.1" *** *)
a(rewrite_tac[map_def]THEN REPEAT strip_tac);
a(fc_tac[˘_extract_null_thm]);
a(spec_nth_asm_tac 1¨(1 .. # lâ2
                         \ Squash
                               (Id
                                   (Dom
                                       (ListRel lâ2
                                           í {r|câ2 dominates R_exist r})))
                             Image ns
                           ° {i|R_exist (Nth lâ2 i) = câ2})Æ);
a(asm_rewrite_tac[extract_def,rel_list_null_thm]);
(* *** Goal "1.2" *** *)
a(REPEAT µ_tac);
a(intro_µ_tac(¨lastÆ,¨lastÆ) THEN REV_LIST_INDUCTION_T¨lâ2Æasm_tac);
=TEX
=SML
(* *** Goal "1.2.1" *** *)
a(REPEAT µ_tac THEN cases_tac¨câ1 dominates R_exist lastÆTHEN asm_rewrite_tac
	[map_def,extract_Î_single_ax] THEN REPEAT strip_tac);
a(CASES_T¨# lâ1 + 1
                         ç 1 .. # (lâ1 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last]) i) = câ2}Ærewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.1.1" *** *)
a(fc_tac[˘_extract_null_thm]);
a(spec_nth_asm_tac 1¨(1 .. # (lâ1 Î [last])
                             \ Squash
                                   (Id
                                       (Dom
                                           (ListRel (lâ1 Î [last])
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (lâ1 Î [last]) i) = câ2})Æ);
a(asm_rewrite_tac[extract_def,rel_list_null_thm]);
=TEX
=SML
(* *** Goal "1.2.1.2" *** *)
a(fc_tac[˘_extract_null_thm]);
a(spec_nth_asm_tac 1¨(1 .. # (lâ1 Î [last])
                             \ Squash
                                   (Id
                                       (Dom
                                           (ListRel (lâ1 Î [last])
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (lâ1 Î [last]) i) = câ2})Æ);
a(asm_rewrite_tac[extract_def,rel_list_null_thm]);
=TEX
=SML
(* *** Goal "1.2.2" *** *)
a(REPEAT µ_tac THEN cases_tac¨câ1 dominates R_exist lastÆTHEN 
	cases_tac¨câ1 dominates R_exist last'Æ THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1" *** *)
a(cases_tac¨câ2 dominates R_exist lastÆ
	THEN cases_tac¨câ2 dominates R_exist last'Æ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
(* *** Goal "1.2.2.1.1" *** *)
a(REPEAT ¥_tac THEN DROP_NTH_ASM_T 10(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 9(fn _ => id_tac) 	
	THEN asm_rewrite_tac[extract_Î_single_lemma] THEN ¥_tac);
=TEX
=SML
a(LEMMA_T¨# lâ1 + 1
                         ç 1 .. # (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2} § 
	# lâ2 + 1
                         ç 1 .. # (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æasm_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.1.1" *** *)
a(POP_ASM_T (fn _ => id_tac) THEN POP_ASM_T (fn _ => id_tac)
	THEN DROP_NTH_ASM_T 2 (strip_asm_tac o rewrite_rule
	[cleanRow_def,get_spec¨MkRowÆ,row_components,rel_ext_clauses]));
a(POP_ASM_T (fn _ => id_tac));
a(fc_tac[size_squash_id_dom_thm]);
a(asm_rewrite_tac[squash_Î_thm,image_def,dot_dot_def,º_plus1_thm,
	length_Î_one_thm]);
a(REPEAT strip_tac);
(* *** Goal "1.2.2.1.1.1.1" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[squash_def,list_rel_def,
	enumerate_def,id_def,dot_dot_def]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.1.2" *** *)
a(spec_nth_asm_tac 3 ¨xÆ);
a(POP_ASM_T ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.1.3" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[squash_def,list_rel_def,
	enumerate_def,id_def,dot_dot_def]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.1.1.1.4" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN DROP_NTH_ASM_T 2 ante_tac 
	THEN asm_rewrite_tac[nth_length_one_thm]THEN REPEAT strip_tac);
(* *** Goal "1.2.2.1.1.1.5" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[squash_def,list_rel_def,
	enumerate_def,id_def,dot_dot_def]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.1.6" *** *)
a(spec_nth_asm_tac 3 ¨xÆ);
a(POP_ASM_T ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.1.7" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN DROP_NTH_ASM_T 2 ante_tac 
	THEN asm_rewrite_tac[nth_length_one_thm]THEN REPEAT strip_tac);
(* *** Goal "1.2.2.1.1.1.8" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN DROP_NTH_ASM_T 2 ante_tac 
	THEN asm_rewrite_tac[nth_length_one_thm]THEN REPEAT strip_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.1.2" *** *)
a(CASES_T¨# lâ1 + 1
               ç 1 .. # (lâ1 Î [last'])
                 \ Squash
                       (Id
                           (Dom
                               (ListRel (lâ1 Î [last'])
                                   í {r|câ2 dominates R_exist r})))
                     Image ns
                   ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æasm_tac);
(* *** Goal "1.2.2.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[] 
	THEN ¥_T asm_rewrite_thm_tac);
(* *** Goal "1.2.2.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[] 
	THEN ¥_T asm_rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.2" *** *)
a(REPEAT ¥_tac);
a(fc_tac[map_cleanRow_lemma2]THEN asm_fc_tac[]);
a(DROP_NTH_ASM_T 16 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
(* *** Goal "1.2.2.1.3" *** *)
a(REPEAT ¥_tac);
a(fc_tac[map_cleanRow_lemma2]THEN asm_fc_tac[]);
a(DROP_NTH_ASM_T 16 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
(* *** Goal "1.2.2.1.4" *** *)
a(REPEAT ¥_tac THEN DROP_NTH_ASM_T 10(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 9(fn _ => id_tac) 	
	THEN asm_rewrite_tac[extract_Î_single_lemma] THEN ¥_tac);
=TEX
=SML
a(LEMMA_T¨# lâ1 + 1
                         ç 1 .. # (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2} § 
	# lâ2 + 1
                         ç 1 .. # (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æasm_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.4.1" *** *)
a(POP_ASM_T (fn _ => id_tac) THEN POP_ASM_T (fn _ => id_tac)
	THEN DROP_NTH_ASM_T 2 (strip_asm_tac o rewrite_rule
	[cleanRow_def,get_spec¨MkRowÆ,row_components,rel_ext_clauses]));
a(POP_ASM_T (fn _ => id_tac));
a(fc_tac[size_squash_id_dom_thm]);
a(asm_rewrite_tac[squash_Î_thm,image_def,dot_dot_def,º_plus1_thm,
	length_Î_one_thm]);
a(REPEAT strip_tac);
(* *** Goal "1.2.2.1.4.1.1" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[squash_def,list_rel_def,
	enumerate_def,id_def,dot_dot_def]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.4.1.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN DROP_NTH_ASM_T 2 ante_tac 
	THEN asm_rewrite_tac[nth_length_one_thm]THEN REPEAT strip_tac);
(* *** Goal "1.2.2.1.4.1.3" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[squash_def,list_rel_def,
	enumerate_def,id_def,dot_dot_def]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.4.1.4" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN DROP_NTH_ASM_T 2 ante_tac 
	THEN asm_rewrite_tac[nth_length_one_thm]THEN REPEAT strip_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.4.2" *** *)
a(CASES_T¨≥ # lâ1 + 1
               ç 1 .. # (lâ1 Î [last'])
                 \ Squash
                       (Id
                           (Dom
                               (ListRel (lâ1 Î [last'])
                                   í {r|câ2 dominates R_exist r})))
                     Image ns
                   ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æasm_tac);
(* *** Goal "1.2.2.1.4.2.1" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[] 
	THEN ¥_T asm_rewrite_thm_tac);
(* *** Goal "1.2.2.1.4.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[] 
	THEN ¥_T asm_rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.2" *** *)
a(cases_tac¨câ2 dominates R_exist last'Æ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
(* *** Goal "1.2.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.2.2" *** *)
a(REPEAT ¥_tac THEN DROP_NTH_ASM_T 8(ante_tac o µ_elim¨lâ2 Î [last]Æ) 
	THEN DROP_NTH_ASM_T 7(fn _ => id_tac) 	
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm] THEN ¥_tac);
a(POP_ASM_T (rewrite_thm_tac o eq_sym_rule));
a(asm_rewrite_tac[extract_Î_single_lemma]);
a(CASES_T¨# lâ1 + 1
                         ç 1 .. # (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æ
	asm_rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.3" *** *)
a(cases_tac¨câ2 dominates R_exist lastÆ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
(* *** Goal "1.2.2.3.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.3.2" *** *)
a(REPEAT ¥_tac THEN DROP_NTH_ASM_T 8 (fn _ => id_tac)
	THEN DROP_NTH_ASM_T 7(ante_tac o µ_elim¨last'Æ) 	
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm] THEN ¥_tac);
a(POP_ASM_T rewrite_thm_tac);
a(asm_rewrite_tac[extract_Î_single_lemma]);
a(CASES_T¨# lâ2 + 1
                         ç 1 .. # (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æ
	asm_rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.4" *** *)
a(cases_tac¨câ2 dominates R_exist lastÆ
	THEN cases_tac¨câ2 dominates R_exist last'Æ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
=TEX
=SML
(* *** Goal "1.2.2.4.1" *** *)
a(REPEAT ¥_tac THEN DROP_NTH_ASM_T 9(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 8(fn _ => id_tac) 	
	THEN asm_rewrite_tac[extract_Î_single_lemma] THEN ¥_tac);
a(CASES_T¨# lâ1 + 1
                         ç 1 .. # (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æ
	asm_rewrite_thm_tac
	THEN CASES_T¨# lâ2 + 1
                         ç 1 .. # (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æ
	asm_rewrite_thm_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.4.2" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.4.3" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.4.4" *** *)
a(REPEAT ¥_tac THEN DROP_NTH_ASM_T 9(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 8(fn _ => id_tac) 	
	THEN asm_rewrite_tac[extract_Î_single_lemma] THEN ¥_tac);
a(CASES_T¨# lâ1 + 1
                         ç 1 .. # (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æ
	asm_rewrite_thm_tac
	THEN CASES_T¨# lâ2 + 1
                         ç 1 .. # (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æ
	asm_rewrite_thm_tac THEN asm_rewrite_tac[]);
val €cleanTable_deleteRows_lemma› = save_pop_thm"cleanTable_deleteRows_lemma";
=TEX
=GFT HOL output
cleanTable_deleteRows_lemma = 
Ù µ câ1 câ2 tâ1 tâ2 ns
  ∑ cleanTable câ1 tâ1 = cleanTable câ1 tâ2
        ± câ1 dominates câ2
        ± câ2 dominates TS_class tâ1
      ¥ cleanTable
          câ1
          (replaceRows
              tâ1
              (Extract
                  (1 .. # (TS_rows tâ1)
                      \ revealRow câ2 tâ1 Image ns
                        ° {i|R_exist (Nth (TS_rows tâ1) i) = câ2})
                  (TS_rows tâ1)))
        = cleanTable
          câ1
          (replaceRows
              tâ2
              (Extract
                  (1 .. # (TS_rows tâ2)
                      \ revealRow câ2 tâ2 Image ns
                        ° {i|R_exist (Nth (TS_rows tâ2) i) = câ2})
                  (TS_rows tâ2)))
=TEX

\subsection{Update Rows Lemma}
We prove two subsidiary results for $updateField$ and $updateRow$.
\subsubsection{Update Field Lemma}

=SML
push_goal([],¨µ câ1 câ2 dâ1 dâ2 t u ∑ 
	câ1 dominates câ2 
	± replaceData câ1 dâ1 = replaceData câ1 dâ2
	± isVal(updateField câ2 (TS_class t) (u,dâ1))
	± isVal(updateField câ2 (TS_class t) (u,dâ2))
	¥
	replaceData câ1 (destVal(updateField câ2 (TS_class t) (u,dâ1)))
	=
	replaceData câ1 (destVal(updateField câ2 (TS_class t) (u,dâ2)))Æ);
a(REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[updateField_def]);
a(cases_tac¨câ2 = TS_class tÆ
	THEN cases_tac¨isItem uÆ
	THEN cases_tac¨isClass uÆ
	THEN asm_rewrite_tac[≥isVal_giveError_thm,destVal_def]);
=TEX
=SML
(* *** Goal "1" *** *)
a(¥_T (fn _ => id_tac) THEN ¥_T (fn _ => id_tac));
a(DROP_NTH_ASM_T 4 ante_tac THEN 
	asm_rewrite_tac[replaceData_def,get_spec¨MkDataÆ]);
a(cases_tac¨câ1 dominates Dat_class dâ1Æ THEN cases_tac¨câ1 dominates Dat_class dâ2Æ 
	THEN asm_rewrite_tac[]);
(* *** Goal "1.1" *** *)
a(¥_T rewrite_thm_tac);
(* *** Goal "1.2" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.3" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "2" *** *)
a(¥_T (fn _ => id_tac) THEN ¥_T (fn _ => id_tac));
a(DROP_NTH_ASM_T 4 ante_tac THEN 
	asm_rewrite_tac[replaceData_def,get_spec¨MkDataÆ]);
a(cases_tac¨câ1 dominates Dat_class dâ1Æ THEN cases_tac¨câ1 dominates Dat_class dâ2Æ 
	THEN asm_rewrite_tac[]);
(* *** Goal "2.1" *** *)
a(¥_T rewrite_thm_tac);
(* *** Goal "2.2" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "2.3" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3" *** *)
a(cases_tac¨destClass u dominates Dat_class dâ1Æ
	THEN cases_tac¨destClass u dominates Dat_class dâ2Æ
	THEN asm_rewrite_tac[≥isVal_giveError_thm,destVal_def]);
a(¥_T (fn _ => id_tac) THEN ¥_T (fn _ => id_tac));
a(DROP_NTH_ASM_T 6 ante_tac THEN 
	asm_rewrite_tac[replaceData_def,get_spec¨MkDataÆ]);
a(cases_tac¨câ1 dominates destClass uÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
a(asm_rewrite_tac[]);
a(¥_T rewrite_thm_tac);
=TEX
=SML
(* *** Goal "4" *** *)
a(cases_tac¨Dat_class dâ1 dominates câ2Æ
	THEN cases_tac¨Dat_class dâ2 dominates câ2Æ
	THEN asm_rewrite_tac[≥isVal_giveError_thm,destVal_def]);
a(¥_T (fn _ => id_tac) THEN ¥_T (fn _ => id_tac));
a(DROP_NTH_ASM_T 6 ante_tac THEN 
	asm_rewrite_tac[replaceData_def,get_spec¨MkDataÆ]);
a(cases_tac¨câ1 dominates Dat_class dâ1Æ THEN cases_tac¨câ1 dominates Dat_class dâ2Æ 
	THEN asm_rewrite_tac[]);
(* *** Goal "4.1" *** *)
a(¥_T rewrite_thm_tac);
(* *** Goal "4.2" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "4.3" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "5" *** *)
a(cases_tac¨Dat_class dâ1 dominates câ2Æ
	THEN cases_tac¨Dat_class dâ2 dominates câ2Æ
	THEN asm_rewrite_tac[≥isVal_giveError_thm,destVal_def]);
a(¥_T (fn _ => id_tac) THEN ¥_T (fn _ => id_tac));
a(DROP_NTH_ASM_T 6 ante_tac THEN 
	asm_rewrite_tac[replaceData_def,get_spec¨MkDataÆ]);
a(cases_tac¨câ1 dominates Dat_class dâ1Æ THEN cases_tac¨câ1 dominates Dat_class dâ2Æ 
	THEN asm_rewrite_tac[]);
(* *** Goal "5.1" *** *)
a(¥_T rewrite_thm_tac);
(* *** Goal "5.2" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "5.3" *** *)
a(rewrite_tac[get_spec¨MkDataÆ,data_components]THEN strip_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
val €replaceData_updateField_lemma› = save_pop_thm"replaceData_updateField_lemma";
=TEX
=GFT HOL output
replaceData_updateField_lemma = 
Ù µ câ1 câ2 dâ1 dâ2 t u
  ∑ câ1 dominates câ2
        ± replaceData câ1 dâ1 = replaceData câ1 dâ2
        ± isVal (updateField câ2 (TS_class t) (u, dâ1))
        ± isVal (updateField câ2 (TS_class t) (u, dâ2))
      ¥ replaceData câ1 (destVal (updateField câ2 (TS_class t) (u, dâ1)))
        = replaceData câ1 (destVal (updateField câ2 (TS_class t) (u, dâ2)))
=TEX
\subsubsection{Update Row Lemma}
=SML
push_goal([],¨µ câ1 câ2 râ1 râ2 t u
	∑ câ1 dominates câ2
	± Dom u Ä {n|∂ c'∑ c' ç visibleCols câ2 t ± CS_posn c' = n}
	± cleanRow câ1 (Snd (cleanColCons câ1 t)) râ1
             = cleanRow câ1 (Snd (cleanColCons câ1 t)) râ2
        ± isVal (updateRow câ2 (TS_class t) (u, râ1))
	± isVal (updateRow câ2 (TS_class t) (u, râ2))  
	¥ cleanRow câ1(Snd (cleanColCons câ1 t))(destVal(updateRow câ2 (TS_class t)(u, râ1)))
	= cleanRow câ1(Snd (cleanColCons câ1 t))(destVal(updateRow câ2 (TS_class t)(u, râ2)))Æ);
a(REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[updateRow_def]);
=TEX
=SML
a(cases_tac¨≥ u ç FunctionalÆ THEN
	cases_tac¨((RelCombine u (R_data râ1)
                                     ª Graph (updateField câ2 (TS_class t)))
                                   í {x|isError x})
                                 ª Graph destError = {}Æ
	THEN cases_tac¨((RelCombine u (R_data râ2)
                                     ª Graph (updateField câ2 (TS_class t)))
                                   í {x|isError x})
                                 ª Graph destError = {}Æ
	THEN asm_rewrite_tac[≥isVal_giveError_thm,giveVal_eq_thm]);
a(¥_T (fn _ => id_tac) THEN ¥_T (fn _ => id_tac) THEN rewrite_tac[destVal_def]);
a(DROP_NTH_ASM_T 3 (fn _ => id_tac));
a(DROP_NTH_ASM_T 3 ante_tac THEN rewrite_tac[cleanRow_def,filterRow_def,
	get_spec¨MkRowÆ,row_components,rel_ext_clauses,rel_combine_def,´_thm]
	THEN REPEAT ¥_tac THEN strip_tac THEN_TRY asm_rewrite_tac[]);
a(REPEAT strip_tac);
=TEX
=SML
(* *** Goal "1" *** *)
(* no update *)
a(lemma_tac¨≥ ∂ up ∑ (x,up) ç uÆ);
(* *** Goal "1.1" *** *)
a contr_tac;
a(spec_nth_asm_tac 4 ¨destVal(updateField câ2 (TS_class t) (up,z))Æ);
a(spec_nth_asm_tac 1 ¨updateField câ2 (TS_class t) (up,z)Æ);
a(spec_nth_asm_tac 1 ¨(up,z)Æ);
(* *** Goal "1.1.1" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[]));
(* *** Goal "1.1.2" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[]));
=TEX
=SML
(* *** Goal "1.2" *** *)
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨xÆ,¨replaceData câ1 zÆ]));
a(LEMMA_T¨(∂ z'
             ∑ ((∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = x)
                   ± (x, z') ç R_data râ1)
                 ± replaceData câ1 z = replaceData câ1 z')Æasm_tac);
(* *** Goal "1.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
a(LEMMA_T¨∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = xÆrewrite_thm_tac);
(* *** Goal "1.2.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.2" *** *)
a(REPEAT strip_tac);
a(spec_nth_asm_tac 9 ¨Fst z'''Æ);
=TEX
=SML
(* *** Goal "2" *** *)
(* update *)
a(DROP_NTH_ASM_T 8(asm_tac o list_µ_elim[¨xÆ,¨replaceData câ1 (Snd z'')Æ]));
a(LEMMA_T¨(∂ z
             ∑ ((∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = x)
                   ± (x, z) ç R_data râ1)
                 ± replaceData câ1 (Snd z'') = replaceData câ1 z)Æasm_tac);
(* *** Goal "2.1" *** *)
a(∂_tac¨Snd z''ÆTHEN asm_rewrite_tac[]);
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
(* *** Goal "2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]THEN ¥_tac);
a(∂_tac¨destVal(updateField câ2 (TS_class t)(Fst z'',z'''))Æ);
a(LEMMA_T¨∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = xÆrewrite_thm_tac);
(* *** Goal "2.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "2.2.2" *** *)
a(LEMMA_T¨(≥ (∂ y z
                   ∑ (∂ z'
                       ∑ ((x, Fst z') ç u ± (x, Snd z') ç R_data râ2)
                           ± z = updateField câ2 (TS_class t) z')
                       ± y = destVal z)
                 ± (x, destVal (updateField câ2 (TS_class t) (Fst z'', z''')))
                   ç R_data râ2
               ≤ (∂ z'
               ∑ (∂ z
                   ∑ ((x, Fst z) ç u ± (x, Snd z) ç R_data râ2)
                       ± z' = updateField câ2 (TS_class t) z)
                   ± destVal (updateField câ2 (TS_class t) (Fst z'', z'''))
                     = destVal z'))Ærewrite_thm_tac);
=TEX
=SML
(* *** Goal "2.2.2.1" *** *)
a ≤_right_tac;
a(∂_tac¨updateField câ2 (TS_class t) (Fst z'', z''')ÆTHEN rewrite_tac[]);
a(∂_tac¨(Fst z'', z''')ÆTHEN asm_rewrite_tac[]);
(* *** Goal "2.2.2.2" *** *)
a(lemma_tac¨isVal (updateField câ2 (TS_class t) (Fst z'', z''')) ± 
	isVal (updateField câ2 (TS_class t) z'')Æ);
(* *** Goal "2.2.2.2.1" *** *)
a strip_tac;
(* *** Goal "2.2.2.2.1.1" *** *)
a(strip_asm_tac(µ_elim¨(updateField câ2 (TS_class t) (Fst z'', z'''))Æval_or_error_type));
a(DROP_NTH_ASM_T 16 (strip_asm_tac o rewrite_rule[rel_ext_clauses,rel_combine_def]));
a(list_spec_nth_asm_tac 1 [¨xÆ,¨destError(updateField câ2 (TS_class t) (Fst z'', z'''))Æ]);
a(spec_nth_asm_tac 1 ¨(updateField câ2 (TS_class t) (Fst z'', z'''))Æ);
a(POP_ASM_T(strip_asm_tac o rewrite_rule[] o µ_elim ¨(Fst z'', z''')Æ));
=TEX
=SML
(* *** Goal "2.2.2.2.1.2" *** *)
a(strip_asm_tac(µ_elim¨(updateField câ2 (TS_class t) z'')Æval_or_error_type));
a(DROP_NTH_ASM_T 17 (strip_asm_tac o rewrite_rule[rel_ext_clauses,rel_combine_def]));
a(list_spec_nth_asm_tac 1 [¨xÆ,¨destError(updateField câ2 (TS_class t) z'')Æ]);
a(spec_nth_asm_tac 1 ¨(updateField câ2 (TS_class t) z'')Æ);
a(POP_ASM_T(strip_asm_tac o rewrite_rule[] o µ_elim ¨z''Æ));
(* *** Goal "2.2.2.2.2" *** *)
a(asm_rewrite_tac[]);
a(POP_ASM_T ante_tac THEN pure_once_rewrite_tac[prove_rule[]¨z'' = (Fst z'',Snd z'')Æ]
	THEN ¥_tac); 
a(fc_tac[replaceData_updateField_lemma]
	THEN asm_fc_tac[] THEN asm_fc_tac[] THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3" *** *)
(* no update *)
a(lemma_tac¨≥ ∂ up ∑ (x,up) ç uÆ);
(* *** Goal "3.1" *** *)
a contr_tac;
a(spec_nth_asm_tac 4 ¨destVal(updateField câ2 (TS_class t) (up,z))Æ);
a(spec_nth_asm_tac 1 ¨updateField câ2 (TS_class t) (up,z)Æ);
a(spec_nth_asm_tac 1 ¨(up,z)Æ);
(* *** Goal "3.1.1" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[]));
(* *** Goal "3.1.2" *** *)
a(POP_ASM_T (strip_asm_tac o rewrite_rule[]));
=TEX
=SML
(* *** Goal "3.2" *** *)
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨xÆ,¨replaceData câ1 zÆ]));
a(LEMMA_T¨(∂ z'
             ∑ ((∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = x)
                   ± (x, z') ç R_data râ2)
                 ± replaceData câ1 z = replaceData câ1 z')Æasm_tac);
(* *** Goal "3.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
a(LEMMA_T¨∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = xÆrewrite_thm_tac);
(* *** Goal "3.2.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2" *** *)
a(REPEAT strip_tac);
a(spec_nth_asm_tac 9 ¨Fst z'''Æ);
=TEX
=SML
(* *** Goal "4" *** *)
(* update *)
a(DROP_NTH_ASM_T 8(asm_tac o list_µ_elim[¨xÆ,¨replaceData câ1 (Snd z'')Æ]));
a(LEMMA_T¨(∂ z
             ∑ ((∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = x)
                   ± (x, z) ç R_data râ2)
                 ± replaceData câ1 (Snd z'') = replaceData câ1 z)Æasm_tac);
(* *** Goal "4.1" *** *)
a(∂_tac¨Snd z''ÆTHEN asm_rewrite_tac[]);
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
(* *** Goal "4.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]THEN ¥_tac);
a(∂_tac¨destVal(updateField câ2 (TS_class t)(Fst z'',z'''))Æ);
a(LEMMA_T¨∂ c∑ c ç Snd (cleanColCons câ1 t) ± CS_posn c = xÆrewrite_thm_tac);
(* *** Goal "4.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "4.2.2" *** *)
a(LEMMA_T¨(≥ (∂ y z
                   ∑ (∂ z'
                       ∑ ((x, Fst z') ç u ± (x, Snd z') ç R_data râ1)
                           ± z = updateField câ2 (TS_class t) z')
                       ± y = destVal z)
                 ± (x, destVal (updateField câ2 (TS_class t) (Fst z'', z''')))
                   ç R_data râ1
               ≤ (∂ z'
               ∑ (∂ z
                   ∑ ((x, Fst z) ç u ± (x, Snd z) ç R_data râ1)
                       ± z' = updateField câ2 (TS_class t) z)
                   ± destVal (updateField câ2 (TS_class t) (Fst z'', z'''))
                     = destVal z'))Ærewrite_thm_tac);
=TEX
=SML
(* *** Goal "4.2.2.1" *** *)
a ≤_right_tac;
a(∂_tac¨updateField câ2 (TS_class t) (Fst z'', z''')ÆTHEN rewrite_tac[]);
a(∂_tac¨(Fst z'', z''')ÆTHEN asm_rewrite_tac[]);
(* *** Goal "4.2.2.2" *** *)
a(lemma_tac¨isVal (updateField câ2 (TS_class t) (Fst z'', z''')) ± 
	isVal (updateField câ2 (TS_class t) z'')Æ);
(* *** Goal "4.2.2.2.1" *** *)
a strip_tac;
(* *** Goal "4.2.2.2.1.1" *** *)
a(strip_asm_tac(µ_elim¨(updateField câ2 (TS_class t) (Fst z'', z'''))Æval_or_error_type));
a(DROP_NTH_ASM_T 17 (strip_asm_tac o rewrite_rule[rel_ext_clauses,rel_combine_def]));
a(list_spec_nth_asm_tac 1 [¨xÆ,¨destError(updateField câ2 (TS_class t) (Fst z'', z'''))Æ]);
a(spec_nth_asm_tac 1 ¨(updateField câ2 (TS_class t) (Fst z'', z'''))Æ);
a(POP_ASM_T(strip_asm_tac o rewrite_rule[] o µ_elim ¨(Fst z'', z''')Æ));
=TEX
=SML
(* *** Goal "4.2.2.2.1.2" *** *)
a(strip_asm_tac(µ_elim¨(updateField câ2 (TS_class t) z'')Æval_or_error_type));
a(DROP_NTH_ASM_T 16 (strip_asm_tac o rewrite_rule[rel_ext_clauses,rel_combine_def]));
a(list_spec_nth_asm_tac 1 [¨xÆ,¨destError(updateField câ2 (TS_class t) z'')Æ]);
a(spec_nth_asm_tac 1 ¨(updateField câ2 (TS_class t) z'')Æ);
a(POP_ASM_T(strip_asm_tac o rewrite_rule[] o µ_elim ¨z''Æ));
(* *** Goal "4.2.2.2.2" *** *)
a(asm_rewrite_tac[]);
a(POP_ASM_T ante_tac THEN pure_once_rewrite_tac[prove_rule[]¨z'' = (Fst z'',Snd z'')Æ]
	THEN ¥_tac); 
a(fc_tac[replaceData_updateField_lemma]
	THEN asm_fc_tac[] THEN asm_fc_tac[] THEN asm_rewrite_tac[]);
val €cleanRow_updateRow_lemma1› = save_pop_thm"cleanRow_updateRow_lemma1";
=TEX
=GFT HOL output
cleanRow_updateRow_lemma1 =
Ù µ câ1 câ2 râ1 râ2 t u
  ∑ câ1 dominates câ2
        ± Dom u Ä {n|∂ c'∑ c' ç visibleCols câ2 t ± CS_posn c' = n}
        ± cleanRow câ1 (Snd (cleanColCons câ1 t)) râ1
          = cleanRow câ1 (Snd (cleanColCons câ1 t)) râ2
        ± isVal (updateRow câ2 (TS_class t) (u, râ1))
        ± isVal (updateRow câ2 (TS_class t) (u, râ2))
      ¥ cleanRow
          câ1
          (Snd (cleanColCons câ1 t))
          (destVal (updateRow câ2 (TS_class t) (u, râ1)))
        = cleanRow
          câ1
          (Snd (cleanColCons câ1 t))
          (destVal (updateRow câ2 (TS_class t) (u, râ2)))
=TEX
\subsubsection{Update Rows Lemma}
We first prove a theorem which essentially states that if the row existence class of 
two rows is the same and the same fields of the two rows are visible, then an update 
either exists for both rows or for neither.
=SML
push_goal([],¨µ lâ1 lâ2 xâ1 xâ2 c us up ∑ 
	R_exist xâ1 = R_exist xâ2 ±  
	#(ListRel lâ1 í {r|c dominates R_exist r})
             = #(ListRel lâ2 í {r|c dominates R_exist r})
	¥  
	(((#(Squash (Id (Dom (ListRel (lâ1 Î [xâ1])
                                        í {r|c dominates R_exist r})))),up) ç us)
	§((#(Squash (Id (Dom (ListRel (lâ2 Î [xâ2])
                                        í {r|c dominates R_exist r})))),up) ç us))Æ);
=TEX
=SML
a(REPEAT µ_tac THEN strip_tac);
a(cases_tac¨c dominates R_exist xâ2Æ);
(* *** Goal "1" *** *)
a(lemma_tac¨c dominates R_exist xâ1Æ THEN_LIST[asm_rewrite_tac[],id_tac]);
a(fc_tac[size_squash_id_dom_thm]);
a(LEMMA_T¨#(Squash (Id (Dom (ListRel (lâ1 Î [xâ1])
                                        í {r|c dominates R_exist r}))))
	= #(Squash (Id (Dom (ListRel (lâ2 Î [xâ2])
                                        í {r|c dominates R_exist r}))))Ærewrite_thm_tac);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨xâ1Æ,¨{r|c dominates R_exist r}Æ]size_squash_plus1_thm));
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨xâ2Æ,¨{r|c dominates R_exist r}Æ]size_squash_plus1_thm));
a(asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(lemma_tac¨≥ c dominates R_exist xâ1Æ THEN_LIST[asm_rewrite_tac[],id_tac]);
a(LEMMA_T¨#(Squash (Id (Dom (ListRel (lâ1 Î [xâ1])
                                        í {r|c dominates R_exist r}))))
	= #(Squash (Id (Dom (ListRel (lâ2 Î [xâ2])
                                        í {r|c dominates R_exist r}))))Ærewrite_thm_tac);
a(asm_rewrite_tac[list_rel_Î_í_thm]);
a(fc_tac[size_squash_id_dom_thm]);
val €inUpdates_lemma› = save_pop_thm"inUpdates_lemma";
=TEX
=GFT HOL output
inUpdates_lemma =
Ù µ lâ1 lâ2 xâ1 xâ2 c us up
  ∑ R_exist xâ1 = R_exist xâ2
        ± # (ListRel lâ1 í {r|c dominates R_exist r})
          = # (ListRel lâ2 í {r|c dominates R_exist r})
      ¥ ((#
                (Squash
                    (Id
                        (Dom
                            (ListRel (lâ1 Î [xâ1])
                                í {r|c dominates R_exist r})))), up)
          ç us
        § (#
                (Squash
                    (Id
                        (Dom
                            (ListRel (lâ2 Î [xâ2])
                                í {r|c dominates R_exist r})))), up)
          ç us)
=TEX
Now the main theorem of this section.
=SML
push_goal([],¨µ câ1 câ2 tâ1 tâ2 us ∑ 
	us ç Functional
	±
	Dom (ﬁ (Ran us)) Ä {n|∂ c ∑ c ç Snd (cleanColCons câ2 tâ2) ± CS_posn c = n}
	±
	((RelCombine
                     (Á~Í (revealRow câ2 tâ1) ª us)
                     (ListRel (TS_rows tâ1))
                   ª Graph (updateRow câ2 (TS_class tâ2)))
                 í {x|isError x})
               ª Graph destError
             = {}
	± ((RelCombine
                     (Á~Í (revealRow câ2 tâ2) ª us)
                     (ListRel (TS_rows tâ2))
                   ª Graph (updateRow câ2 (TS_class tâ2)))
                 í {x|isError x})
               ª Graph destError
             = {}
	± cleanTable câ1 tâ1 = cleanTable câ1 tâ2 
	± câ1 dominates câ2 ± câ2 dominates TS_class tâ1  
	¥
	cleanTable
               câ1
               (replaceRows
                   tâ1
                   (RelList
                       (ListRel (TS_rows tâ1)
                           ´ (RelCombine
                               (Á~Í (revealRow câ2 tâ1) ª us)
                               (ListRel (TS_rows tâ1))
                             ª Graph (updateRow câ2 (TS_class tâ1)))
                           ª Graph destVal)))
	=
	cleanTable
               câ1
               (replaceRows
                   tâ2
                   (RelList
                       (ListRel (TS_rows tâ2)
                           ´ (RelCombine
                               (Á~Í (revealRow câ2 tâ2) ª us)
                               (ListRel (TS_rows tâ2))
                             ª Graph (updateRow câ2 (TS_class tâ2)))
                           ª Graph destVal)))Æ);
=TEX
=SML
a(REPEAT strip_tac);
a(lemma_tac¨cleanTable câ2 tâ1 = cleanTable câ2 tâ2Æ
	THEN_LIST[fc_tac[cleanTable_lemma]
	THEN asm_fc_tac[],id_tac]);
a(DROP_NTH_ASM_T 4 ante_tac THEN  
	rewrite_tac[cleanTable_def,replaceRows_def,get_spec¨MkTableSpecÆ]);
a(lemma_tac¨câ1 dominates TS_class tâ1ÆTHEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(cases_tac¨câ1 dominates TS_class tâ2ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
set_labelled_goal"2";
(* *** Goal "2" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]
	THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1" *** *)
a(¥_T(strip_asm_tac o rewrite_rule[get_spec¨MkTableSpecÆ,tab_components]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[cleanTable_def]);
a(GET_NTH_ASM_T 8 ante_tac THEN GET_NTH_ASM_T 5 rewrite_thm_tac 
	THEN ¥_tac
	THEN asm_rewrite_tac[get_spec¨MkTableSpecÆ,tab_components] THEN strip_tac);
a(POP_ASM_T ante_tac THEN lemma_tac¨cleanColCons câ2 tâ1 = cleanColCons câ2 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 3(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 2(fn _ => id_tac)]);
a(asm_rewrite_tac[] THEN ¥_tac);
a(lemma_tac¨cleanColCons câ1 tâ1 = cleanColCons câ1 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 7(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 6(fn _ => id_tac)]);
=TEX
=SML
a(DROP_NTH_ASM_T 5 ante_tac THEN asm_rewrite_tac[] THEN ¥_tac);
a(fc_tac[cleanRows_size_lemma]);
a(LIST_DROP_NTH_ASM_T [1,2,3,4](MAP_EVERY ante_tac));
a(LIST_DROP_NTH_ASM_T [1,2](MAP_EVERY (fn _ => id_tac)));
a(DROP_NTH_ASM_T 9 ante_tac THEN DROP_NTH_ASM_T 8 ante_tac THEN 
	rewrite_tac[cleanColCons_def,cleanRows_def,revealRow_def,get_spec¨MkTableSpecÆ]);
a(REPEAT strip_tac);
a(LIST_DROP_NTH_ASM_T [1,2,3,6,7](MAP_EVERY ante_tac));
a(lemma_tac¨∂ lâ1 ∑ TS_rows tâ1 = lâ1ÆTHEN_LIST
	[prove_∂_tac,POP_ASM_T rewrite_thm_tac]);
a(lemma_tac¨∂ lâ2 ∑ TS_rows tâ2 = lâ2ÆTHEN_LIST
	[prove_∂_tac,POP_ASM_T rewrite_thm_tac]);
a(intro_µ_tac(¨lâ2Æ,¨lâ2Æ));
a(REV_LIST_INDUCTION_T¨lâ1Æasm_tac);
=TEX
=SML
(* *** Goal "1.1" *** *)
a(rewrite_tac[map_def,all_µ_intro(eq_sym_rule(all_µ_elim list_rel_list_thm)),
	´_null_thm,rel_list_null_thm]THEN REPEAT strip_tac);
a(LEMMA_T¨ListRel lâ2 í {r|câ2 dominates R_exist r} = {}Ærewrite_thm_tac);
(* *** Goal "1.1.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN rewrite_tac[rel_ext_clauses,í_def]);
a(REPEAT strip_tac);
a(list_spec_nth_asm_tac 2 [¨xÆ,¨yÆ]);
a(swap_nth_asm_concl_tac 1);
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.1.2" *** *)
a(asm_rewrite_tac[´_null_thm2,rel_list_def]);
=TEX
=SML
(* *** Goal "1.2" *** *)
a(REPEAT µ_tac);
a(intro_µ_tac(¨lastÆ,¨lastÆ) THEN REV_LIST_INDUCTION_T¨lâ2Æasm_tac);
(* *** Goal "1.2.1" *** *)
a(REPEAT µ_tac THEN cases_tac¨câ1 dominates R_exist lastÆTHEN asm_rewrite_tac
	[map_def,´_null_thm,rel_list_null_thm,
	all_µ_intro(eq_sym_rule(all_µ_elim list_rel_list_thm))]THEN REPEAT strip_tac);
a(LEMMA_T¨ListRel (lâ1 Î [last]) í {r|câ2 dominates R_exist r} = {}Ærewrite_thm_tac);
(* *** Goal "1.2.1.1" *** *)
a(lemma_tac¨≥ câ2 dominates R_exist lastÆ);
(* *** Goal "1.2.1.1.1" *** *)
a(swap_nth_asm_concl_tac 4);
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.1.2" *** *)
a(asm_rewrite_tac[list_rel_Î_í_thm]);
a(DROP_NTH_ASM_T 4 ante_tac THEN rewrite_tac[rel_ext_clauses,í_def]);
a(REPEAT strip_tac);
a(list_spec_nth_asm_tac 2 [¨xÆ,¨yÆ]);
a(swap_nth_asm_concl_tac 1);
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.2" *** *)
a(asm_rewrite_tac[´_null_thm2,rel_list_def,list_rel_Î_í_thm]);
=TEX
=SML
(* *** Goal "1.2.2" *** *)
a(REPEAT µ_tac THEN cases_tac¨câ1 dominates R_exist lastÆTHEN 
	cases_tac¨câ1 dominates R_exist last'Æ THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1" *** *)
a(cases_tac¨câ2 dominates R_exist lastÆ
	THEN cases_tac¨câ2 dominates R_exist last'Æ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
=TEX
=SML
(* *** Goal "1.2.2.1.1" *** *)
a(REPEAT ¥_tac THEN fc_tac[rel_combine_null_lemma]);
a(DROP_NTH_ASM_T 14(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 13(fn _ => id_tac) 	
	THEN asm_rewrite_tac[] THEN ¥_tac);
a(GET_NTH_ASM_T 6 (strip_asm_tac o rewrite_rule
	[cleanRow_def,get_spec¨MkRowÆ,row_components,rel_ext_clauses]));
a(POP_ASM_T (fn _ => id_tac));
a(ante_tac(list_µ_elim[¨lâ1Æ,¨lâ2Æ,¨last'Æ,¨lastÆ,¨câ2Æ,¨usÆ]inUpdates_lemma) 
	THEN asm_rewrite_tac[] THEN ¥_tac);
a(cases_tac¨∂ up ∑ (#(Squash (Id (Dom (ListRel (lâ1 Î [last'])
                                                   í {r|câ2 dominates R_exist r})))),up) ç usÆ);
(* *** Goal "1.2.2.1.1.1" *** *)
a(strip_asm_tac(list_µ_elim[
	¨#(Squash(Id(Dom(ListRel (lâ1 Î [last']) í {r|câ2 dominates R_exist r}))))Æ,
	¨upÆ,¨usÆ,¨câ2Æ,¨tâ2Æ]dom_ﬁ_ran_lemma));
a(DROP_NTH_ASM_T 3 (ante_tac o µ_elim¨upÆ) THEN asm_rewrite_tac[]THEN ¥_tac);
a(strip_asm_tac(list_µ_elim[¨câ2Æ,¨last'Æ,¨lâ1Æ,¨upÆ,¨usÆ,¨tâ2Æ]conjunct1_lemma2)
	THEN POP_ASM_T rewrite_thm_tac);
a(strip_asm_tac(list_µ_elim[¨câ2Æ,¨lastÆ,¨lâ2Æ,¨upÆ,¨usÆ,¨tâ2Æ]conjunct1_lemma2)
	THEN POP_ASM_T rewrite_thm_tac);
a(lemma_tac¨isVal (updateRow câ2 (TS_class tâ2) (up, last')) 
	± isVal (updateRow câ2 (TS_class tâ2) (up, last))Æ);
=TEX
=SML
(* *** Goal "1.2.2.1.1.1.1" *** *)
a strip_tac;
(* *** Goal "1.2.2.1.1.1.1.1" *** *)
a(strip_asm_tac(µ_elim¨(updateRow câ2 (TS_class tâ2) (up, last'))Æval_or_error_type));
a(DROP_NTH_ASM_T 14 (strip_asm_tac o rewrite_rule[rel_ext_clauses,rel_combine_def]));
a(list_spec_nth_asm_tac 1 [¨# lâ1 + 1Æ,¨destError(updateRow câ2(TS_class tâ2)(up,last'))Æ]);
a(spec_nth_asm_tac 1 ¨(updateRow câ2 (TS_class tâ2) (up, last'))Æ);
a(POP_ASM_T(strip_asm_tac o rewrite_rule[] o µ_elim ¨(up, last')Æ));
(* *** Goal "1.2.2.1.1.1.1.1.1" *** *)
a(spec_nth_asm_tac 1 ¨#(Squash (Id (Dom (ListRel (lâ1 Î [last'])
                                                   í {r|câ2 dominates R_exist r}))))Æ);
a(POP_ASM_T ante_tac THEN asm_rewrite_tac[inv_rel_def]);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨last'Æ,¨{r|câ2 dominates R_exist r}Æ]size_Î_one_thm));
(* *** Goal "1.2.2.1.1.1.1.1.2" *** *)
a(POP_ASM_T(strip_asm_tac o rewrite_rule[list_rel_def,dot_dot_def,
	length_Î_one_thm,nth_length_one_thm]));
=TEX
=SML
(* *** Goal "1.2.2.1.1.1.1.2" *** *)
a(strip_asm_tac(µ_elim¨(updateRow câ2 (TS_class tâ2) (up, last))Æval_or_error_type));
a(DROP_NTH_ASM_T 15 (strip_asm_tac o rewrite_rule[rel_ext_clauses,rel_combine_def]));
a(list_spec_nth_asm_tac 1 [¨# lâ2 + 1Æ,¨destError(updateRow câ2(TS_class tâ2)(up, last))Æ]);
a(spec_nth_asm_tac 1 ¨(updateRow câ2 (TS_class tâ2) (up, last))Æ);
a(POP_ASM_T(strip_asm_tac o rewrite_rule[] o µ_elim ¨(up, last)Æ));
(* *** Goal "1.2.2.1.1.1.1.2.1" *** *)
a(spec_nth_asm_tac 1 ¨#(Squash (Id (Dom (ListRel (lâ2 Î [last])
                                                   í {r|câ2 dominates R_exist r}))))Æ);
a(POP_ASM_T ante_tac THEN asm_rewrite_tac[inv_rel_def]);
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨lastÆ,¨{r|câ2 dominates R_exist r}Æ]size_Î_one_thm));
(* *** Goal "1.2.2.1.1.1.1.2.2" *** *)
a(POP_ASM_T(strip_asm_tac o rewrite_rule[list_rel_def,dot_dot_def,
	length_Î_one_thm,nth_length_one_thm]));
=TEX
=SML
(* *** Goal "1.2.2.1.1.1.2" *** *)
a(LEMMA_T¨câ1 dominates R_exist
                         (destVal (updateRow câ2 (TS_class tâ2) (up, last')))
	± câ1 dominates R_exist
                         (destVal (updateRow câ2 (TS_class tâ2) (up, last)))Æasm_rewrite_thm_tac);
(* *** Goal "1.2.2.1.1.1.2.1" *** *)
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[updateRow_def]);
a(cases_tac¨≥ up ç FunctionalÆ THEN
	cases_tac¨((RelCombine up (R_data last')
                                 ª Graph (updateField câ2 (TS_class tâ2)))
                               í {x|isError x})
                             ª Graph destError
                           = {}
	± ((RelCombine up (R_data last)
                                 ª Graph (updateField câ2 (TS_class tâ2)))
                               í {x|isError x})
                             ª Graph destError
                           = {}Æ
	THEN asm_rewrite_tac[≥isVal_giveError_thm,destVal_def,get_spec¨MkRowÆ,
	row_components]THEN REPEAT strip_tac);
(* *** Goal "1.2.2.1.1.1.2.2" *** *)
a(bc_tac[rewrite_rule[cleanColCons_def]cleanRow_updateRow_lemma1]THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[]  THEN ¥_tac);
a(LEMMA_T¨RelCombine (Á~Í (Squash
                                       (Id
                                           (Dom
                                               (ListRel (lâ1 Î [last'])
                                                   í {r|câ2 dominates R_exist r}))))
                                 ª us)
                             (ListRel (lâ1 Î [last']))
	=RelCombine (Á~Í (Squash
                                       (Id
                                           (Dom
                                               (ListRel lâ1
                                                   í {r|câ2 dominates R_exist r}))))
                                 ª us)
                             (ListRel lâ1)Ærewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.1.2.1" *** *)
a(asm_rewrite_tac[squash_Î_thm]);
a(LEMMA_T¨Á~Í {(# (Squash(Id(Dom (ListRel lâ1
           í {r|câ2 dominates R_exist r})))) + 1, # lâ1 + 1)}
                     ª us = {}Ærewrite_thm_tac);
(* *** Goal "1.2.2.1.1.2.1.1" *** *)
a(rewrite_tac[rel_ext_clauses,inv_rel_def]THEN REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨yÆ);
a(DROP_NTH_ASM_T 4(fn _ => id_tac) THEN DROP_NTH_ASM_T 4(fn _ => id_tac));
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨last'Æ,¨{r|câ2 dominates R_exist r}Æ]size_squash_plus1_thm));
a(swap_nth_asm_concl_tac 2);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.2.1.2" *** *)
a(rewrite_tac[rel_combine_one_lemma]);
=TEX
=SML
(* *** Goal "1.2.2.1.1.2.2" *** *)
a(LEMMA_T¨RelCombine (Á~Í (Squash
                                       (Id
                                           (Dom
                                               (ListRel (lâ2 Î [last])
                                                   í {r|câ2 dominates R_exist r}))))
                                 ª us)
                             (ListRel (lâ2 Î [last]))
	=RelCombine (Á~Í (Squash
                                       (Id
                                           (Dom
                                               (ListRel lâ2
                                                   í {r|câ2 dominates R_exist r}))))
                                 ª us)
                             (ListRel lâ2)Ærewrite_thm_tac);
(* *** Goal "1.2.2.1.1.2.2.1" *** *)
a(asm_rewrite_tac[squash_Î_thm]);
a(LEMMA_T¨Á~Í {(# (Squash(Id(Dom (ListRel lâ2
           í {r|câ2 dominates R_exist r})))) + 1, # lâ2 + 1)}
                     ª us = {}Ærewrite_thm_tac);
(* *** Goal "1.2.2.1.1.2.2.1.1" *** *)
a(rewrite_tac[rel_ext_clauses,inv_rel_def]THEN REPEAT strip_tac);
a(spec_nth_asm_tac 3 ¨yÆ);
a(DROP_NTH_ASM_T 4(fn _ => id_tac) THEN DROP_NTH_ASM_T 4(fn _ => id_tac));
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨lastÆ,¨{r|câ2 dominates R_exist r}Æ]size_squash_plus1_thm));
a(swap_nth_asm_concl_tac 2);
a(DROP_NTH_ASM_T 4 ante_tac THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.2.2.1.2" *** *)
a(rewrite_tac[rel_combine_one_lemma]);
(* *** Goal "1.2.2.1.1.2.2.2" *** *)
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨last'Æ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨lastÆ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.1.2" *** *)
a(REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨lâ2Æ,¨câ1Æ,¨câ2Æ,¨{col
                     |∂ y
                       ∑ câ1 dominates CC_exist y
                           ± (CS_consGroup col, y) ç TS_cons tâ2}Æ]
	map_cleanRow_lemma2));
a(DROP_NTH_ASM_T 3 ante_tac THEN POP_ASM_T rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.3" *** *)
a(REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨lâ2Æ,¨câ1Æ,¨câ2Æ,¨{col
                     |∂ y
                       ∑ câ1 dominates CC_exist y
                           ± (CS_consGroup col, y) ç TS_cons tâ2}Æ]
	map_cleanRow_lemma2));
a(DROP_NTH_ASM_T 3 ante_tac THEN POP_ASM_T rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1.2.2.1.4" *** *)
a(REPEAT ¥_tac THEN fc_tac[rel_combine_null_lemma]);
a(DROP_NTH_ASM_T 14(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 13(fn _ => id_tac) 	
	THEN asm_rewrite_tac[] THEN ¥_tac);
a(asm_rewrite_tac[list_rel_Î_í_thm,rel_combine_one_lemma]);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨last'Æ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨lastÆ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.2" *** *)
a(cases_tac¨câ2 dominates R_exist last'Æ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
(* *** Goal "1.2.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.2.2" *** *)
a(REPEAT ¥_tac THEN fc_tac[rel_combine_null_lemma]);
a(DROP_NTH_ASM_T 12(ante_tac o µ_elim¨lâ2 Î [last]Æ) 
	THEN DROP_NTH_ASM_T 11(fn _ => id_tac) 	
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm] THEN ¥_tac);
a(POP_ASM_T (rewrite_thm_tac o eq_sym_rule));
a(asm_rewrite_tac[list_rel_Î_í_thm,rel_combine_one_lemma]);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨last'Æ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.3" *** *)
a(cases_tac¨câ2 dominates R_exist lastÆ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm]);
(* *** Goal "1.2.2.3.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.3.2" *** *)
a(REPEAT ¥_tac THEN fc_tac[rel_combine_null_lemma]);
a(DROP_NTH_ASM_T 12(fn _ => id_tac) 
	THEN DROP_NTH_ASM_T 11(ante_tac o µ_elim¨last'Æ) 	
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm] THEN ¥_tac);
a(POP_ASM_T rewrite_thm_tac);
a(asm_rewrite_tac[list_rel_Î_í_thm,rel_combine_one_lemma]);
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨lastÆ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "1.2.2.4" *** *)
a(lemma_tac¨≥ câ2 dominates R_exist last ± ≥ câ2 dominates R_exist last'Æ);
(* *** Goal "1.2.2.4.1" *** *)
a(swap_nth_asm_concl_tac 1 THEN fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.4.2" *** *)
a(asm_rewrite_tac[size_list_rel_Î_í_thm] THEN REPEAT ¥_tac 
	THEN fc_tac[rel_combine_null_lemma]);
a(DROP_NTH_ASM_T 13(ante_tac o µ_elim¨lâ2Æ) 
	THEN DROP_NTH_ASM_T 12(fn _ => id_tac) 	
	THEN asm_rewrite_tac[size_list_rel_Î_í_thm] THEN ¥_tac);
a(asm_rewrite_tac[list_rel_Î_í_thm,rel_combine_one_lemma]);
a(strip_asm_tac(list_µ_elim[¨lâ1Æ,¨last'Æ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(strip_asm_tac(list_µ_elim[¨lâ2Æ,¨lastÆ,¨câ2Æ,¨usÆ,¨tâ2Æ]conjunct1_lemma1));
a(asm_rewrite_tac[]);
val €cleanTable_updateRows_lemma› = save_pop_thm"cleanTable_updateRows_lemma";
=TEX
=GFT HOL output
cleanTable_updateRows_lemma =
Ù µ câ1 câ2 tâ1 tâ2 us
  ∑ Dom (ﬁ (Ran us))
          Ä {n|∂ c∑ c ç Snd (cleanColCons câ2 tâ2) ± CS_posn c = n}
        ± ((RelCombine
                  (Á~Í (revealRow câ2 tâ1) ª us)
                  (ListRel (TS_rows tâ1))
                ª Graph (updateRow câ2 (TS_class tâ2)))
              í {x|isError x})
            ª Graph destError
          = {}
        ± ((RelCombine
                  (Á~Í (revealRow câ2 tâ2) ª us)
                  (ListRel (TS_rows tâ2))
                ª Graph (updateRow câ2 (TS_class tâ2)))
              í {x|isError x})
            ª Graph destError
          = {}
        ± cleanTable câ1 tâ1 = cleanTable câ1 tâ2
        ± câ1 dominates câ2
        ± câ2 dominates TS_class tâ1
      ¥ cleanTable
          câ1
          (replaceRows
              tâ1
              (RelList
                  (ListRel (TS_rows tâ1)
                      ´ (RelCombine
                          (Á~Í (revealRow câ2 tâ1) ª us)
                          (ListRel (TS_rows tâ1))
                        ª Graph (updateRow câ2 (TS_class tâ1)))
                      ª Graph destVal)))
        = cleanTable
          câ1
          (replaceRows
              tâ2
              (RelList
                  (ListRel (TS_rows tâ2)
                      ´ (RelCombine
                          (Á~Í (revealRow câ2 tâ2) ª us)
                          (ListRel (TS_rows tâ2))
                        ª Graph (updateRow câ2 (TS_class tâ2)))
                      ª Graph destVal)))
=TEX
\subsection{Proof of Conjunct 2}
First we prove three auxiliary results.
=SML
push_goal([],¨µ câ1 câ2 i s ∑ (câ1 dominates câ2 ± tabExists câ2 i s) 
	¥ tabExists câ1 i sÆ);
a(REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN rewrite_tac[tabExists_def]);
a(REPEAT strip_tac);
(* *** Goal "1" *** *)
a(∂_tac¨yÆTHEN asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "3" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "4" *** *)
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
val €tabExists_lemma1› = save_pop_thm"tabExists_lemma1";
=TEX
=GFT HOL output
tabExists_lemma1 = 
Ù µ câ1 câ2 i s
  ∑ câ1 dominates câ2 ± tabExists câ2 i s ¥ tabExists câ1 i s 
=TEX
=SML
push_goal([],¨µ c sâ1 sâ2
  ∑ hideR (c, repState sâ1) = hideR (c, repState sâ2)
      ¥ (µ i
      ∑ tabExists c i (repState sâ1)
          ¥ cleanTable c (getTable i (repState sâ1))
              = cleanTable c (getTable i (repState sâ2)))Æ);
a(REPEAT strip_tac);
a(fc_tac[rewrite_rule[hide_eq_lemma]tabExists_cleanTable_lemma]THEN asm_fc_tac[]);
val €tabExists_cleanTable_lemma1› = save_pop_thm"tabExists_cleanTable_lemma1";
=TEX
=GFT HOL output
tabExists_cleanTable_lemma1 = 
Ù µ c sâ1 sâ2
  ∑ hideR (c, repState sâ1) = hideR (c, repState sâ2)
      ¥ (µ i
      ∑ tabExists c i (repState sâ1)
          ¥ cleanTable c (getTable i (repState sâ1))
            = cleanTable c (getTable i (repState sâ2))) 
=TEX
=SML
push_goal([],¨µ c tâ1 tâ2 ∑ 
	c dominates TS_class tâ1 
	± c dominates TS_class tâ2 
	± cleanTable c tâ1 = cleanTable c tâ2
	¥ colDefaults c tâ1 = colDefaults c tâ2Æ);
a(REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN asm_rewrite_tac
	[cleanTable_def,get_spec¨MkTableSpecÆ,tab_components]THEN strip_tac);
a(asm_rewrite_tac[ext_thm,colDefaults_def,visibleCols_def]);
val €colDefaults_lemma› = save_pop_thm"colDefaults_lemma";
=TEX
=GFT HOL output
colDefaults_lemma = Ù µ c tâ1 tâ2
  ∑ c dominates TS_class tâ1
        ± c dominates TS_class tâ2
        ± cleanTable c tâ1 = cleanTable c tâ2
      ¥ colDefaults c tâ1 = colDefaults c tâ2 
=TEX

Now the proof of $conjunct2$.
=SML
push_goal([],¨µ câ1 câ2 sâ1 sâ2 e
        ∑ hideR (câ1, repState sâ1) = hideR (câ1, repState sâ2) ± câ1 dominates câ2
            ¥ hideR (câ1, Fst (updateStateR (câ2, e, repState sâ1)))
              = hideR (câ1, Fst (updateStateR (câ2, e, repState sâ2)))Æ);
a(REPEAT strip_tac);
a(lemma_tac¨hideR (câ2, repState sâ1) = hideR (câ2, repState sâ2)Æ
	THEN_LIST[fc_tac[rewrite_rule[hide_eq_lemma,secureHide_def]secureHide_lemma]
	THEN asm_fc_tac[],id_tac]);
a(LEMMA_T¨e = (Fst e,Snd e)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[updateStateR_def]]);
a(lemma_tac¨(tabExists câ2 (tabFromEffect (Fst e)) (repState sâ1) 
		¥ tabExists câ2 (tabFromEffect (Fst e)) (repState sâ2))
	± (tabExists câ2(tabFromEffect (Fst e)) (repState sâ2 )
		¥ tabExists câ2(tabFromEffect (Fst e)) (repState sâ1))Æ);
=TEX
=SML
(* *** Goal "1" *** *)
a(strip_asm_tac(list_µ_elim[¨câ2Æ,¨sâ1Æ,¨sâ2Æ](rewrite_rule[hide_eq_lemma]
	tabExists_lemma))THEN asm_rewrite_tac[]);
(* *** Goal "2" *** *)
(* invalid tables in sâ1 and sâ2 *)
a(strip_asm_tac(µ_elim ¨Fst eÆ query_type) THEN asm_rewrite_tac[]
	THEN cases_tac¨≥ Snd e = []Æ THEN asm_rewrite_tac[]);
(* *** Goal "3" *** *)
(* valid tables in sâ1 and sâ2 *)
a(strip_asm_tac (list_µ_elim[¨câ2Æ,¨sâ1Æ,¨sâ2Æ](rewrite_rule[hide_eq_lemma]
	tabExists_cleanTable_lemma)));
a(POP_ASM_T (strip_asm_tac o µ_elim¨tabFromEffect (Fst e)Æ));
=TEX
=SML
(* *** Goal "3.1" *** *)
(* table classes not dominated  by c *)
a(EVERY[strip_asm_tac(µ_elim ¨Fst eÆ query_type),
	asm_rewrite_tac[],
	cases_tac¨≥ Snd e = []Æ,
	asm_rewrite_tac[]]);
(* *** Goal "3.2" *** *)
(* table classes dominated by c *)
a(strip_asm_tac(list_µ_elim[¨câ1Æ,¨câ2Æ,¨tabFromEffect (Fst e)Æ,¨repState sâ1Æ]tabExists_lemma1));
a(strip_asm_tac (list_µ_elim[¨câ1Æ,¨sâ1Æ,¨sâ2Æ]tabExists_cleanTable_lemma1));
a(POP_ASM_T (strip_asm_tac o µ_elim¨tabFromEffect (Fst e)Æ));
a(EVERY[strip_asm_tac(µ_elim ¨Fst eÆ query_type),
	asm_rewrite_tac[],
	cases_tac¨≥ Snd e = []Æ,
	asm_rewrite_tac[]]);
=TEX
=SML
(* 3 subgoals - Select automatically proven *)
(* *** Goal "3.2.1" *** *)
(* *** Insert *** *)
a(LIST_DROP_NTH_ASM_T[1,2,3,4,7](MAP_EVERY (fn _ => id_tac))); 
a(POP_ASM_T (strip_asm_tac o rewrite_rule[isInsert_def]));
a(LIST_DROP_NTH_ASM_T[2,3,4,5,6,7](MAP_EVERY ante_tac) 
	THEN POP_ASM_T rewrite_thm_tac);
a(rewrite_tac[destInsert_def,tabFromEffect_def,
	getTable_def,rewrite_rule[dom_def]tabExists_def]);
a(REPEAT strip_tac);
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ1ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ1Æ,¨Front (Fst i)Æ,¨y''Æ]at_thm1));
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ2ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ2Æ,¨Front (Fst i)Æ,¨yÆ]at_thm1));
a(LIST_DROP_NTH_ASM_T[7,8,9,10,11,12,13,15,16,17](MAP_EVERY ante_tac) 
	THEN GET_NTH_ASM_T 4 rewrite_thm_tac THEN TOP_ASM_T rewrite_thm_tac);
=TEX
=SML
a(REPEAT ¥_tac);
a(DROP_NTH_ASM_T 16  ante_tac  THEN DROP_NTH_ASM_T 13  ante_tac  THEN
	rewrite_tac[™_def,get_spec¨IdeLÆ,get_spec¨DirectorySÆ,°_def,∏_def,
	get_spec¨UniverseÆ,rel_ext_clauses,get_spec¨$Æ]THEN REPEAT ¥_tac);
a(asm_fc_tac[]);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[ﬂ_def,°_def]
	THEN REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨Dir_tables yÆ,¨Last (Fst i)Æ,¨y'Æ]at_thm1));
a(strip_asm_tac(list_µ_elim[¨Dir_tables y''Æ,¨Last (Fst i)Æ,¨y'''Æ]at_thm1));
a(LIST_DROP_NTH_ASM_T[9,10,11,12](MAP_EVERY ante_tac)THEN asm_rewrite_tac[]);
a(LIST_DROP_NTH_ASM_T[4,6,7,8](MAP_EVERY (fn _ => id_tac))
	THEN REPEAT ¥_tac); 
a(LEMMA_T¨i = (Fst i,Snd i)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],asm_rewrite_tac[hideR_def,insertQuery_def,changeSpec_def]]);
a(DROP_NTH_ASM_T 23(strip_asm_tac o rewrite_rule[hideR_def,rel_ext_clauses]));
a(REPEAT µ_tac);
a(strip_asm_tac(list_µ_elim[¨câ2Æ,¨y'''Æ,¨y'Æ]colDefaults_lemma));
a(TOP_ASM_T rewrite_thm_tac);
a(cases_tac¨≥ Elems (Map (MkRow câ2 o colDefaults câ2 y')
		(Snd i)) Ä RowSÆ
	THEN asm_rewrite_tac[]);
a(POP_ASM_T (fn _ => id_tac) THEN REPEAT strip_tac);
=TEX
=SML
(* *** Goal "3.2.1.1" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst i)Æasm_tac);
(* *** Goal "3.2.1.1.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 8(asm_tac o list_µ_elim[¨Front(Fst i)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst i), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.1.1.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.1.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
=TEX
=SML
(* *** Goal "3.2.1.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 26(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst i)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.1.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,
	get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory
                         (Dir_tables y
                             ´ {(Last (Fst i),
                                 replaceRows
                                     y'
                                     (TS_rows y'
                                         Î Map
                                           (MkRow câ2 o colDefaults câ2 y')
                                           (Snd i)))})
                         (Dir_exist y)
                         (Dir_class y)ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
=TEX
=SML
(* *** Goal "3.2.1.1.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y' (TS_rows y' Î Map (MkRow câ2 o colDefaults câ2 y') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(DROP_NTH_ASM_T 7 (ante_tac o µ_elim¨Snd iÆ) THEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.1.1.1.2.2.1.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.1.1.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y''' (TS_rows y''' Î Map (MkRow câ2 o colDefaults câ2 y''') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(DROP_NTH_ASM_T 7 (ante_tac o µ_elim¨Snd iÆ) THEN asm_rewrite_tac[] 
	THEN ¥_T rewrite_thm_tac);
(* *** Goal "3.2.1.1.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 6(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.1.1.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.1.2" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst i)Æasm_tac);
(* *** Goal "3.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 8(asm_tac o list_µ_elim[¨Front(Fst i)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst i), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.1.2.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.1.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
=TEX
=SML
(* *** Goal "3.2.1.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 26(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst i)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.1.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,
	get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory
                         (Dir_tables y''
                             ´ {(Last (Fst i),
                                 replaceRows
                                     y'''
                                     (TS_rows y'''
                                         Î Map
                                           (MkRow câ2 o colDefaults câ2 y''')
                                           (Snd i)))})
                         (Dir_exist y'')
                         (Dir_class y'')ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
=TEX
=SML
(* *** Goal "3.2.1.2.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y''' (TS_rows y''' Î Map (MkRow câ2 o colDefaults câ2 y''') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(DROP_NTH_ASM_T 7 (ante_tac o µ_elim¨Snd iÆ) THEN asm_rewrite_tac[] 
	THEN ¥_T rewrite_thm_tac);
(* *** Goal "3.2.1.2.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.1.2.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y' (TS_rows y' Î Map (MkRow câ2 o colDefaults câ2 y') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(DROP_NTH_ASM_T 7 (ante_tac o µ_elim¨Snd iÆ) THEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.1.2.1.2.2.2.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 6(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ2)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.1.2.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.2" *** *)
(* *** Delete *** *)
a(LIST_DROP_NTH_ASM_T[1,2,3,4,7](MAP_EVERY (fn _ => id_tac))); 
a(POP_ASM_T (strip_asm_tac o rewrite_rule[isDelete_def]));
a(LIST_DROP_NTH_ASM_T[2,3,4,5,6,7](MAP_EVERY ante_tac) 
	THEN POP_ASM_T rewrite_thm_tac);
a(rewrite_tac[destInsert_def,tabFromEffect_def,
	getTable_def,rewrite_rule[dom_def]tabExists_def]);
a(REPEAT strip_tac);
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ1ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ1Æ,¨Front (Fst d)Æ,¨y''Æ]at_thm1));
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ2ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ2Æ,¨Front (Fst d)Æ,¨yÆ]at_thm1));
a(LIST_DROP_NTH_ASM_T[7,8,9,10,11,12,13,15,16,17](MAP_EVERY ante_tac) 
	THEN GET_NTH_ASM_T 4 rewrite_thm_tac THEN TOP_ASM_T rewrite_thm_tac);
=TEX
=SML
a(REPEAT ¥_tac);
a(DROP_NTH_ASM_T 16  ante_tac  THEN DROP_NTH_ASM_T 13  ante_tac  THEN
	rewrite_tac[™_def,get_spec¨IdeLÆ,get_spec¨DirectorySÆ,°_def,∏_def,
	get_spec¨UniverseÆ,rel_ext_clauses,get_spec¨$Æ]THEN REPEAT ¥_tac);
a(asm_fc_tac[]);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[ﬂ_def,°_def]
	THEN REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨Dir_tables yÆ,¨Last (Fst d)Æ,¨y'Æ]at_thm1));
a(strip_asm_tac(list_µ_elim[¨Dir_tables y''Æ,¨Last (Fst d)Æ,¨y'''Æ]at_thm1));
a(LIST_DROP_NTH_ASM_T[9,10,11,12](MAP_EVERY ante_tac)THEN asm_rewrite_tac[]);
a(LIST_DROP_NTH_ASM_T[4,6,7,8](MAP_EVERY (fn _ => id_tac))
	THEN REPEAT ¥_tac); 
a(LEMMA_T¨d = (Fst d,Snd d)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],asm_rewrite_tac[hideR_def,deleteQuery_def,changeSpec_def]]);
a(DROP_NTH_ASM_T 23(strip_asm_tac o rewrite_rule[hideR_def,rel_ext_clauses]));
a(REPEAT strip_tac);
=TEX
=SML
(* *** Goal "3.2.2.1" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst d)Æasm_tac);
(* *** Goal "3.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst d)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst d), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.2.1.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
=TEX
=SML
(* *** Goal "3.2.2.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 25(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst d)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.2.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,
	get_spec¨MkDirectoryÆ,dir_components]));
=TEX
=SML
a(∂_tac¨MkDirectory(Dir_tables y
                             ´ {(Last (Fst d),
                                 replaceRows
                                     y'
                                     (Extract
                                         (1 .. # (TS_rows y')
                                             \ revealRow câ2 y' Image Snd d
                                               ° {i
                                               |R_exist (Nth (TS_rows y') i)
                                                   = câ2})
                                         (TS_rows y')))})
                         (Dir_exist y)
                         (Dir_class y)ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
=TEX
=SML
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
=TEX
=SML
(* *** Goal "3.2.2.1.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'
                       (Extract
                           (1 .. # (TS_rows y')
                               \ revealRow câ2 y' Image Snd d
                                 ° {i|R_exist (Nth (TS_rows y') i) = câ2})
                           (TS_rows y'))Æ THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_deleteRows_lemma]THEN asm_fc_tac[]);
a(spec_nth_asm_tac 7 ¨Snd dÆ);
(* *** Goal "3.2.2.1.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
=TEX
=SML
(* *** Goal "3.2.2.1.1.2.2.1.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'''
                   (Extract
                       (1 .. # (TS_rows y''')
                           \ revealRow câ2 y''' Image Snd d
                             ° {i|R_exist (Nth (TS_rows y''') i) = câ2})
                       (TS_rows y'''))Æ THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_deleteRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd dÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.2.1.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.2.2" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst d)Æasm_tac);
(* *** Goal "3.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst d)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst d), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.2.2.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
=TEX
=SML
(* *** Goal "3.2.2.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 25(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst d)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,
	get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory (Dir_tables y''
                             ´ {(Last (Fst d),
                                 replaceRows
                                     y'''
                                     (Extract
                                         (1 .. # (TS_rows y''')
                                             \ revealRow câ2 y''' Image Snd d
                                               ° {i
                                               |R_exist (Nth (TS_rows y''') i)
                                                   = câ2})
                                         (TS_rows y''')))})
                         (Dir_exist y'')
                         (Dir_class y'')ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
=TEX
=SML
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
=TEX
=SML
(* *** Goal "3.2.2.2.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'''
                   (Extract
                       (1 .. # (TS_rows y''')
                           \ revealRow câ2 y''' Image Snd d
                             ° {i|R_exist (Nth (TS_rows y''') i) = câ2})
                       (TS_rows y'''))Æ THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_deleteRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd dÆ THEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.2.2.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'
                       (Extract
                           (1 .. # (TS_rows y')
                               \ revealRow câ2 y' Image Snd d
                                 ° {i|R_exist (Nth (TS_rows y') i) = câ2})
                           (TS_rows y'))Æ THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_deleteRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd dÆ);
(* *** Goal "3.2.2.2.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.2.2.1.2.2.2.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ2)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.2.2.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.3" *** *)
(* *** Update *** *)
a(LIST_DROP_NTH_ASM_T[1,2,3,4,7](MAP_EVERY (fn _ => id_tac))); 
a(POP_ASM_T (strip_asm_tac o rewrite_rule[isUpdate_def]));
a(LIST_DROP_NTH_ASM_T[2,3,4,5,6,7](MAP_EVERY ante_tac) 
	THEN POP_ASM_T rewrite_thm_tac);
a(rewrite_tac[destInsert_def,tabFromEffect_def,
	getTable_def,rewrite_rule[dom_def]tabExists_def]);
a(REPEAT strip_tac);
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ1ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ1Æ,¨Front (Fst u)Æ,¨y''Æ]at_thm1));
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ2ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ2Æ,¨Front (Fst u)Æ,¨yÆ]at_thm1));
a(LIST_DROP_NTH_ASM_T[7,8,9,10,11,12,13,15,16,17](MAP_EVERY ante_tac) 
	THEN GET_NTH_ASM_T 4 rewrite_thm_tac THEN TOP_ASM_T rewrite_thm_tac);
=TEX
=SML
a(REPEAT ¥_tac);
a(DROP_NTH_ASM_T 16  ante_tac  THEN DROP_NTH_ASM_T 13  ante_tac  THEN
	rewrite_tac[™_def,get_spec¨IdeLÆ,get_spec¨DirectorySÆ,°_def,∏_def,
	get_spec¨UniverseÆ,rel_ext_clauses,get_spec¨$Æ]THEN REPEAT ¥_tac);
a(asm_fc_tac[]);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[ﬂ_def,°_def]
	THEN REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨Dir_tables yÆ,¨Last (Fst u)Æ,¨y'Æ]at_thm1));
a(strip_asm_tac(list_µ_elim[¨Dir_tables y''Æ,¨Last (Fst u)Æ,¨y'''Æ]at_thm1));
a(LIST_DROP_NTH_ASM_T[9,10,11,12](MAP_EVERY ante_tac)THEN asm_rewrite_tac[]);
a(LIST_DROP_NTH_ASM_T[4,6,7,8](MAP_EVERY (fn _ => id_tac))
	THEN REPEAT ¥_tac); 
=TEX
=SML
a(LEMMA_T¨hideR (câ1, Fst (updateQuery (câ2, u, repState sâ1, y''')))
	= hideR(câ1, Fst (updateQuery (câ2, u, repState sâ2, y')))Æ
	rewrite_thm_tac);
a(DROP_NTH_ASM_T 4 ante_tac THEN 
	asm_rewrite_tac[cleanTable_def,get_spec¨MkTableSpecÆ,tab_components]);
a strip_tac;
a(DROP_NTH_ASM_T 27 (asm_tac o rewrite_rule[hideR_def]));
a(LEMMA_T¨u = (Fst u,Snd u)Æ pure_once_asm_rewrite_thm_tac THEN_LIST[rewrite_tac[],
	asm_rewrite_tac[hideR_def,updateQuery_def,changeSpec_def,visibleCols_def]]);
a(conv_tac (MAP_C let_conv));
=TEX
=SML
a(cases_tac¨≥ Snd u ç FunctionalÆ THEN
	cases_tac¨≥ Dom (ﬁ (Ran (Snd u)))
                             Ä {n
                             |∂ c
                               ∑ c ç Snd (cleanColCons câ2 y') ± CS_posn c = n}Æ
	THEN asm_rewrite_tac[]);
a(ante_tac (rewrite_rule[visibleCols_def]
	(list_µ_elim[¨câ2Æ,¨y'Æ,¨y'''Æ,¨Snd uÆ]cleanRows_errors_or_vals_lemma)) 
	THEN asm_rewrite_tac[] THEN REPEAT strip_tac THEN asm_rewrite_tac[]);
a(DROP_NTH_ASM_T 5(asm_tac o rewrite_rule[rel_ext_clauses]));
a(rewrite_tac[rel_ext_clauses]THEN REPEAT strip_tac);
=TEX
=SML
(* *** Goal "3.2.3.1" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst u)Æasm_tac);
(* *** Goal "3.2.3.1.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst u)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst u), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.3.1.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.3.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
(* *** Goal "3.2.3.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 33(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst u)Æ,¨z'Æ,¨yÆ]));
=TEX
=SML
(* *** Goal "3.2.3.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,
	get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory(Dir_tables y
                             ´ {(Last (Fst u),
                                 replaceRows
                                     y'
                                     (RelList
                                         (ListRel (TS_rows y')
                                             ´ (RelCombine
                                                 (Á~Í (revealRow câ2 y')
                                                     ª Snd u)
                                                 (ListRel (TS_rows y'))
                                               ª Graph
                                                 (updateRow câ2 (TS_class y')))
                                             ª Graph destVal)))})
                         (Dir_exist y)
                         (Dir_class y)ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
=TEX
=SML
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
=TEX
=SML
(* *** Goal "3.2.3.1.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst u)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.1.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows
                   y'
                   (RelList
                       (ListRel (TS_rows y')
                           ´ (RelCombine
                               (Á~Í (revealRow câ2 y') ª Snd u)
                               (ListRel (TS_rows y'))
                             ª Graph (updateRow câ2 (TS_class y')))
                           ª Graph destVal))Æ THEN asm_rewrite_tac[]);
a(ante_tac(list_µ_elim[¨câ1Æ,¨câ2Æ,¨y'''Æ,¨y'Æ,¨Snd uÆ]cleanTable_updateRows_lemma)
	THEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.1.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
=TEX
=SML
(* *** Goal "3.2.3.1.1.2.2.1.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.1.1.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.1.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst u)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.1.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows
                   y'''
                   (RelList
                       (ListRel (TS_rows y''')
                           ´ (RelCombine
                               (Á~Í (revealRow câ2 y''') ª Snd u)
                               (ListRel (TS_rows y'''))
                             ª Graph (updateRow câ2 (TS_class y')))
                           ª Graph destVal))Æ THEN asm_rewrite_tac[]);
a(ante_tac(list_µ_elim[¨câ1Æ,¨câ2Æ,¨y'''Æ,¨y'Æ,¨Snd uÆ]cleanTable_updateRows_lemma)
	THEN asm_rewrite_tac[] THEN ¥_T rewrite_thm_tac);
(* *** Goal "3.2.3.1.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.3.1.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.3.1.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.3.2" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst u)Æasm_tac);
(* *** Goal "3.2.3.2.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst u)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst u), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.3.2.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.3.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
(* *** Goal "3.2.3.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 33(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst u)Æ,¨z'Æ,¨yÆ]));
=TEX
=SML
(* *** Goal "3.2.3.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,
	get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory (Dir_tables y''
                             ´ {(Last (Fst u),
                                   replaceRows
                                       y'''
                                       (RelList
                                           (ListRel (TS_rows y''')
                                               ´ (RelCombine
                                                   (Á~Í (revealRow câ2 y''')
                                                       ª Snd u)
                                                   (ListRel (TS_rows y'''))
                                                 ª Graph
                                                   (updateRow
                                                       câ2
                                                       (TS_class y')))
                                               ª Graph destVal)))})
                         (Dir_exist y'')
                         (Dir_class y'')ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
=TEX
=SML
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
=TEX
=SML
(* *** Goal "3.2.3.2.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst u)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.2.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'''
                   (RelList
                           (ListRel (TS_rows y''')
                               ´ (RelCombine
                                   (Á~Í (revealRow câ2 y''') ª Snd u)
                                   (ListRel (TS_rows y'''))
                                 ª Graph (updateRow câ2 (TS_class y')))
                               ª Graph destVal))Æ THEN asm_rewrite_tac[]);
a(ante_tac(list_µ_elim[¨câ1Æ,¨câ2Æ,¨y'''Æ,¨y'Æ,¨Snd uÆ]cleanTable_updateRows_lemma)
	THEN asm_rewrite_tac[] THEN ¥_T rewrite_thm_tac);
(* *** Goal "3.2.3.2.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.2.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst u)ÆTHEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "3.2.3.2.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'
                       (RelList
                           (ListRel (TS_rows y')
                               ´ (RelCombine
                                   (Á~Í (revealRow câ2 y') ª Snd u)
                                   (ListRel (TS_rows y'))
                                 ª Graph (updateRow câ2 (TS_class y')))
                               ª Graph destVal))Æ THEN asm_rewrite_tac[]);
a(ante_tac(list_µ_elim[¨câ1Æ,¨câ2Æ,¨y'''Æ,¨y'Æ,¨Snd uÆ]cleanTable_updateRows_lemma)
	THEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.2.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
=TEX
=SML
(* *** Goal "3.2.3.2.1.2.2.2.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.2.1.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.2.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule
	[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ2)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.3.2.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
val €conjunct2› = save_pop_thm"conjunct2";
=TEX
=GFT HOL output
conjunct2 = 
Ù µ câ1 câ2 sâ1 sâ2 e
  ∑ hideR (câ1, repState sâ1) = hideR (câ1, repState sâ2) ± câ1 dominates câ2
      ¥ hideR (câ1, Fst (updateStateR (câ2, e, repState sâ1)))
        = hideR (câ1, Fst (updateStateR (câ2, e, repState sâ2)))
=TEX
\section{CLOSING DOWN}
The following \Product{} instruction restores the previous proof context.
=SML
pop_pc();
=TEX


\newpage
\HOLindexOff
\input{fef013th.tex}
\HOLindexOn
\newpage
\twocolumn[\section{INDEX} \label{INDEX}]
\small
\printindex

\end{document}

 





