=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ]{article}
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DRA FRONT END FILTER PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Proof of Security (IId)}  %% Mandatory field
\TPPref{DS/FMU/FEF/012}  %% Mandatory field
\def\SCCSversion{$Revision$
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$
}}  %% Mandatory field (with sensible default)
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{}
\TPPauthor{G.~M.~Prout & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.B.~Jones & HAT Manager}
\TPPabstract{This document completes the formal proof of security for the
DRA front end filter project RSRE 1C/6130.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	HAT FEF File \\
	Simon Wiseman
}}
%\TPPclass{CLASSIFICATION}
\newfont{\icllogo}{icllogo50}
\def\TPPheadlhs{$\vcenter{\halign{##\cr\icllogo ICL\cr}}$}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

%\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section {DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,fef}

\subsection{Changes History}
\begin{description}
\item[Issue \SCCSversion(\FormatDate{$Date$
})] First draft version.
\end{description}

\subsection{Changes Forecast}
Changes  may be necessary  as a result of issues raised
during  the transcription of the specification.
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document, together with \cite{DS/FMU/FEF/011} and \cite{DS/FMU/FEF/012}, provides a formal proof  that the components $hide$ and $updateState$ 
satisfy their critical 
requirements, as specified in 
the proof strategy \cite{DS/FMU/FEF/007}. It constitutes part of deliverable D6 
of work package 1a, as given
in section 7 of the Secure Database Technical Proposal, \cite{DS/FMU/017}.

\subsection{Introduction}

This document is a proof script which provides a formal proof which completes  the proof
 of the second conjunct of $Lemma1$,
the requirement on the critical components  $hide$ and $updateState$, described in the proof strategy document \cite{DS/FMU/FEF/007}.

{\bf Lemma1}
=GFT 
	?Ù 	hide ç secureHide ± (hide,updateState) ç secureUpdate
=TEX

In this document, we give a proof that the second conjunct of $secureUpdate$ holds for $hideR$ and $updateStateR$:

=GFT
	?Ù 	µ câ1 câ2 sâ1 sâ2 e
			∑ hideR(câ1, sâ1) = hideR (câ1, sâ2) ± câ1 dominates câ2
				¥ hideR(câ1, Fst (updateStateR (câ2, e, sâ1)))
              = hideR (câ1, Fst (updateStateR (câ2, e, sâ2))))
=TEX
Hence ....


\section{PRELIMINARIES}
The following ICL HOL instructions set up the new theory $fef013$.

=SML 
open_theory "fef012";
new_theory€"fef013"›;
push_merge_pcs["hol","fefhol","fefrel","'pair1"] ;
=TEX

\section{PROOF OF SECURITY OF CRITICAL COMPONENTS}




\subsection{Proof of Conjunct 2}

=SML
push_goal([],¨µ t rs ∑ TS_class(replaceRows t rs) = TS_class tÆ);
a(rewrite_tac[replaceRows_def,tab_components,get_spec¨MkTableSpecÆ]);
val €class_replaceRows_lemma› = save_pop_thm"class_replaceRows_lemma";
=TEX
=SML
push_goal([],¨µ câ1 câ2 tâ1 tâ2 ds ∑ 
	cleanTable câ1 tâ1 = cleanTable câ1 tâ2 ± câ1 dominates câ2  
	¥
	cleanTable câ1 (replaceRows tâ1
		((TS_rows tâ1) Î (Map((MkRow câ2) o (colDefaults câ2 tâ1))ds)))
	=
	cleanTable câ1 (replaceRows tâ2
		((TS_rows tâ2) Î (Map((MkRow câ2) o (colDefaults câ2 tâ2))ds)))Æ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 2 ante_tac THEN rewrite_tac[cleanTable_def,replaceRows_def,get_spec¨MkTableSpecÆ]);
a(cases_tac¨câ1 dominates TS_class tâ1ÆTHEN cases_tac¨câ1 dominates TS_class tâ2Æ
	THEN asm_rewrite_tac[]);
(* *** Goal "1" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]THEN REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN rewrite_tac[cleanRows_def,revealRow_def,map_Î_thm1]);
a ¥_tac;
a(LEMMA_T¨Map
                 (cleanRow
                     câ1
                     {col
                       |∂ y
                         ∑ câ1 dominates CC_exist y
                             ± (CS_consGroup col, y) ç TS_cons tâ1})
                 (Map (MkRow câ2 o colDefaults câ2 tâ1) ds
                     ˘ {r|câ1 dominates R_exist r}) = 
	Map
                 (cleanRow
                     câ1
                     {col
                       |∂ y
                         ∑ câ1 dominates CC_exist y
                             ± (CS_consGroup col, y) ç TS_cons tâ2})
                 (Map (MkRow câ2 o colDefaults câ2 tâ2) ds
                     ˘ {r|câ1 dominates R_exist r})Æasm_rewrite_thm_tac);
a(POP_ASM_T (fn _ => id_tac));
a(REV_LIST_INDUCTION_T¨dsÆasm_tac);
(* *** Goal "1.1" *** *)
a(rewrite_tac[map_def,˘_def]);
(* *** Goal "1.2" *** *)
a(rewrite_tac[map_Î_thm,˘_thm,get_spec¨MkRowÆ]);
a(µ_tac THEN GET_NTH_ASM_T 8 rewrite_thm_tac);
a(LEMMA_T¨cleanRow  câ1 {col
                   |∂ y
                     ∑ câ1 dominates CC_exist y
                         ± (CS_consGroup col, y) ç TS_cons tâ1}
                 (MkRow câ2 (colDefaults câ2 tâ1 last))
               = cleanRow câ1  {col
                   |∂ y
                     ∑ câ1 dominates CC_exist y
                         ± (CS_consGroup col, y) ç TS_cons tâ2}
                 (MkRow câ2 (colDefaults câ2 tâ2 last))Æasm_rewrite_thm_tac);
a(POP_ASM_T (fn _ => id_tac));
a(POP_ASM_T(strip_asm_tac o rewrite_rule[rel_ext_clauses,í_thm]));
a(asm_rewrite_tac[colDefaults_def,cleanColCons_def,visibleCols_def,cleanRow_def,
	get_spec¨MkRowÆ,row_components,rel_ext_clauses,filterRow_def]);
a(REPEAT strip_tac);
(* *** Goal "1.2.1" *** *)
a(cases_tac¨≥ x ç Dom{(n, d)
               |∂ c
                 ∑ ≥ (∂ y
                       ∑ câ2 dominates CC_exist y
                           ± (CS_consGroup c, y) ç TS_cons tâ1)
                     ± n = CS_posn c
                     ± d = CS_default c}Æ);
(* *** Goal "1.2.1.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
(* *** Goal "1.2.1.1.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.1.1.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.1.1.2" *** *)
a ≤_left_tac;
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨y''Æ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(∂_tac¨y'''ÆTHEN asm_rewrite_tac[]);
a(lemma_tac¨câ1 dominates CC_exist y'''Æ);
(* *** Goal "1.2.1.1.1.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.1.1.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y'''Æ]);
(* *** Goal "1.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨zÆ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(spec_nth_asm_tac 7 ¨y''Æ);
(* *** Goal "1.2.1.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.2.2" *** *)
a ≤_right_tac;
a(∂_tac¨c'ÆTHEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨y''Æ);
a contr_tac;
a(lemma_tac¨câ1 dominates CC_exist y''Æ);
(* *** Goal "1.2.1.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.2.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y''Æ]);
(* *** Goal "1.2.2" *** *)
a(cases_tac¨≥ x ç Dom{(n, d)
               |∂ c
                 ∑ ≥ (∂ y
                       ∑ câ2 dominates CC_exist y
                           ± (CS_consGroup c, y) ç TS_cons tâ2)
                     ± n = CS_posn c
                     ± d = CS_default c}Æ);
(* *** Goal "1.2.2.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
(* *** Goal "1.2.2.1.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.2.1.1.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.2" *** *)
a ≤_left_tac;
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨y''Æ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(∂_tac¨y'''ÆTHEN asm_rewrite_tac[]);
a(lemma_tac¨câ1 dominates CC_exist y'''Æ);
(* *** Goal "1.2.2.1.1.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.1.1.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y'''Æ]);
(* *** Goal "1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨zÆ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(spec_nth_asm_tac 7 ¨y''Æ);
(* *** Goal "1.2.2.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.2.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.2.2" *** *)
a ≤_right_tac;
a(∂_tac¨c'ÆTHEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨y''Æ);
a contr_tac;
a(lemma_tac¨câ1 dominates CC_exist y''Æ);
(* *** Goal "1.2.2.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.2.2.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y''Æ]);
(* *** Goal "2" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
(* *** Goal "3" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
val €cleanTable_insertRows_lemma› = save_pop_thm"cleanTable_insertRows_lemma";
=TEX
=SML
val delete_ax = new_axiom(["delete_ax"],¨µ câ1 câ2 tâ1 tâ2 ns ∑ 
	cleanTable câ1 tâ1 = cleanTable câ1 tâ2 
	± câ1 dominates câ2 ± câ2 dominates TS_class tâ1 
	¥
	cleanTable câ1 (replaceRows tâ1 
		(Extract (1 .. Length(TS_rows tâ1) \ 
	((revealRow câ2 tâ1) Image ns ° {i|R_exist(Nth(TS_rows tâ1)i) = câ2}))
	(TS_rows tâ1)))
	=
	cleanTable câ1 (replaceRows tâ2 
		(Extract (1 .. Length(TS_rows tâ2) \ 
	((revealRow câ2 tâ2) Image ns ° {i|R_exist(Nth(TS_rows tâ2)i) = câ2}))
	(TS_rows tâ2)))Æ);
=TEX



=SML
push_goal([],¨µ câ1 câ2 i s ∑ (câ1 dominates câ2 ± tabExists câ2 i s) 
	¥ tabExists câ1 i sÆ);
a(REPEAT strip_tac);
a(POP_ASM_T ante_tac THEN rewrite_tac[tabExists_def]);
a(REPEAT strip_tac);
(* *** Goal "1" *** *)
a(∂_tac¨yÆTHEN asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "3" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "4" *** *)
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
val €tabExists_lemma1› = save_pop_thm"tabExists_lemma1";
=TEX
=SML
push_goal([],¨µ c sâ1 sâ2
  ∑ hideR (c, repState sâ1) = hideR (c, repState sâ2)
      ¥ (µ i
      ∑ tabExists c i (repState sâ1)
          ¥ cleanTable c (getTable i (repState sâ1))
              = cleanTable c (getTable i (repState sâ2)))Æ);
a(REPEAT strip_tac);
a(fc_tac[rewrite_rule[hide_eq_lemma]tabExists_cleanTable_lemma]THEN asm_fc_tac[]);
val €tabExists_cleanTable_lemma1› = save_pop_thm"tabExists_cleanTable_lemma1";
=TEX

=SML
push_goal([],¨µ câ1 câ2 sâ1 sâ2 e
        ∑ hideR (câ1, repState sâ1) = hideR (câ1, repState sâ2) ± câ1 dominates câ2
            ¥ hideR (câ1, Fst (updateStateR (câ2, e, repState sâ1)))
              = hideR (câ1, Fst (updateStateR (câ2, e, repState sâ2)))Æ);
a(REPEAT strip_tac);
a(lemma_tac¨hideR (câ2, repState sâ1) = hideR (câ2, repState sâ2)Æ
	THEN_LIST[fc_tac[rewrite_rule[hide_eq_lemma,secureHide_def]secureHide_lemma]
	THEN asm_fc_tac[],id_tac]);
a(LEMMA_T¨e = (Fst e,Snd e)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[updateStateR_def]]);
a(lemma_tac¨(tabExists câ2 (tabFromEffect (Fst e)) (repState sâ1) 
		¥ tabExists câ2 (tabFromEffect (Fst e)) (repState sâ2))
	± (tabExists câ2(tabFromEffect (Fst e)) (repState sâ2 )
		¥ tabExists câ2(tabFromEffect (Fst e)) (repState sâ1))Æ);
(* *** Goal "1" *** *)
a(strip_asm_tac(list_µ_elim[¨câ2Æ,¨sâ1Æ,¨sâ2Æ](rewrite_rule[hide_eq_lemma]
	tabExists_lemma))THEN asm_rewrite_tac[]);
(* *** Goal "2" *** *)
(* invalid tables in sâ1 and sâ2 *)
a(strip_asm_tac(µ_elim ¨Fst eÆ query_type) THEN asm_rewrite_tac[]
	THEN cases_tac¨≥ Snd e = []Æ THEN asm_rewrite_tac[]);
(* *** Goal "3" *** *)
(* valid tables in sâ1 and sâ2 *)
a(strip_asm_tac (list_µ_elim[¨câ2Æ,¨sâ1Æ,¨sâ2Æ](rewrite_rule[hide_eq_lemma]
	tabExists_cleanTable_lemma)));
a(POP_ASM_T (strip_asm_tac o µ_elim¨tabFromEffect (Fst e)Æ));
(* *** Goal "3.1" *** *)
(* table classes not dominated  by c *)
a(EVERY[strip_asm_tac(µ_elim ¨Fst eÆ query_type),
	asm_rewrite_tac[],
	cases_tac¨≥ Snd e = []Æ,
	asm_rewrite_tac[]]);
(* *** Goal "3.2" *** *)
(* table classes dominated by c *)
a(strip_asm_tac(list_µ_elim[¨câ1Æ,¨câ2Æ,¨tabFromEffect (Fst e)Æ,¨repState sâ1Æ]tabExists_lemma1));
a(strip_asm_tac (list_µ_elim[¨câ1Æ,¨sâ1Æ,¨sâ2Æ]tabExists_cleanTable_lemma1));
a(POP_ASM_T (strip_asm_tac o µ_elim¨tabFromEffect (Fst e)Æ));
a(EVERY[strip_asm_tac(µ_elim ¨Fst eÆ query_type),
	asm_rewrite_tac[],
	cases_tac¨≥ Snd e = []Æ,
	asm_rewrite_tac[]]);
(* 3 subgoals - Select automatically proven *)
(* *** Goal "3.2.1" *** *)
(* *** Insert *** *)
a(LIST_DROP_NTH_ASM_T[1,2,3,4,7](MAP_EVERY (fn _ => id_tac))); 
a(POP_ASM_T (strip_asm_tac o rewrite_rule[isInsert_def]));
a(LIST_DROP_NTH_ASM_T[2,3,4,5,6,7](MAP_EVERY ante_tac) THEN POP_ASM_T rewrite_thm_tac);
a(rewrite_tac[destInsert_def,tabFromEffect_def,
	getTable_def,rewrite_rule[dom_def]tabExists_def]);
a(REPEAT strip_tac);
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ1ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ1Æ,¨Front (Fst i)Æ,¨y''Æ]at_thm));
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ2ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ2Æ,¨Front (Fst i)Æ,¨yÆ]at_thm));
a(LIST_DROP_NTH_ASM_T[7,8,9,10,11,12,13,15,16,17](MAP_EVERY ante_tac) 
	THEN GET_NTH_ASM_T 4 rewrite_thm_tac THEN TOP_ASM_T rewrite_thm_tac);
a(REPEAT ¥_tac);
a(DROP_NTH_ASM_T 16  ante_tac  THEN DROP_NTH_ASM_T 13  ante_tac  THEN
	rewrite_tac[™_def,get_spec¨IdeLÆ,get_spec¨DirectorySÆ,°_def,∏_def,
	get_spec¨UniverseÆ,dom_thm,rel_ext_clauses,get_spec¨$Æ]THEN REPEAT ¥_tac);
a(asm_fc_tac[]);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[ﬂ_def,°_def]
	THEN REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨Dir_tables yÆ,¨Last (Fst i)Æ,¨y'Æ]at_thm));
a(strip_asm_tac(list_µ_elim[¨Dir_tables y''Æ,¨Last (Fst i)Æ,¨y'''Æ]at_thm));
a(LIST_DROP_NTH_ASM_T[9,10,11,12](MAP_EVERY ante_tac)THEN asm_rewrite_tac[]);
a(LIST_DROP_NTH_ASM_T[4,6,7,8](MAP_EVERY (fn _ => id_tac))THEN REPEAT ¥_tac); 
a(LEMMA_T¨i = (Fst i,Snd i)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],asm_rewrite_tac[hideR_def,insertQuery_def,changeSpec_def]]);
a(DROP_NTH_ASM_T 23(strip_asm_tac o rewrite_rule[hideR_def,rel_ext_clauses]));
a(REPEAT strip_tac);
(* *** Goal "3.2.1.1" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst i)Æasm_tac);
(* *** Goal "3.2.1.1.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst i)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst i), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.1.1.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.1.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
(* *** Goal "3.2.1.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 25(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst i)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.1.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory
                         (Dir_tables y
                             ´ {(Last (Fst i),
                                 replaceRows
                                     y'
                                     (TS_rows y'
                                         Î Map
                                           (MkRow câ2 o colDefaults câ2 y')
                                           (Snd i)))})
                         (Dir_exist y)
                         (Dir_class y)ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
(* *** Goal "3.2.1.1.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y' (TS_rows y' Î Map (MkRow câ2 o colDefaults câ2 y') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd iÆ);
(* *** Goal "3.2.1.1.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.1.1.1.2.2.1.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y''' (TS_rows y''' Î Map (MkRow câ2 o colDefaults câ2 y''') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd iÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.1.1.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst i)Æasm_tac);
(* *** Goal "3.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst i)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst i), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.1.2.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.1.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
(* *** Goal "3.2.1.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 25(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst i)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.1.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory
                         (Dir_tables y''
                             ´ {(Last (Fst i),
                                 replaceRows
                                     y'''
                                     (TS_rows y'''
                                         Î Map
                                           (MkRow câ2 o colDefaults câ2 y''')
                                           (Snd i)))})
                         (Dir_exist y'')
                         (Dir_class y'')ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
(* *** Goal "3.2.1.2.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y''' (TS_rows y''' Î Map (MkRow câ2 o colDefaults câ2 y''') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd iÆ THEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst i)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y' (TS_rows y' Î Map (MkRow câ2 o colDefaults câ2 y') (Snd i))Æ
	THEN asm_rewrite_tac[]);
a(fc_tac[cleanTable_insertRows_lemma]THEN asm_fc_tac[]); 
a(spec_nth_asm_tac 7 ¨Snd iÆ);
(* *** Goal "3.2.1.2.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.1.2.1.2.2.2.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.1.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ2)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.1.2.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.1.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2" *** *)
(* *** Delete *** *)
a(LIST_DROP_NTH_ASM_T[1,2,3,4,7](MAP_EVERY (fn _ => id_tac))); 
a(POP_ASM_T (strip_asm_tac o rewrite_rule[isDelete_def]));
a(LIST_DROP_NTH_ASM_T[2,3,4,5,6,7](MAP_EVERY ante_tac) THEN POP_ASM_T rewrite_thm_tac);
a(rewrite_tac[destInsert_def,tabFromEffect_def,
	getTable_def,rewrite_rule[dom_def]tabExists_def]);
a(REPEAT strip_tac);
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ1ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ1Æ,¨Front (Fst d)Æ,¨y''Æ]at_thm));
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ2ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ2Æ,¨Front (Fst d)Æ,¨yÆ]at_thm));
a(LIST_DROP_NTH_ASM_T[7,8,9,10,11,12,13,15,16,17](MAP_EVERY ante_tac) 
	THEN GET_NTH_ASM_T 4 rewrite_thm_tac THEN TOP_ASM_T rewrite_thm_tac);
a(REPEAT ¥_tac);
a(DROP_NTH_ASM_T 16  ante_tac  THEN DROP_NTH_ASM_T 13  ante_tac  THEN
	rewrite_tac[™_def,get_spec¨IdeLÆ,get_spec¨DirectorySÆ,°_def,∏_def,
	get_spec¨UniverseÆ,dom_thm,rel_ext_clauses,get_spec¨$Æ]THEN REPEAT ¥_tac);
a(asm_fc_tac[]);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[ﬂ_def,°_def]
	THEN REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨Dir_tables yÆ,¨Last (Fst d)Æ,¨y'Æ]at_thm));
a(strip_asm_tac(list_µ_elim[¨Dir_tables y''Æ,¨Last (Fst d)Æ,¨y'''Æ]at_thm));
a(LIST_DROP_NTH_ASM_T[9,10,11,12](MAP_EVERY ante_tac)THEN asm_rewrite_tac[]);
a(LIST_DROP_NTH_ASM_T[4,6,7,8](MAP_EVERY (fn _ => id_tac))THEN REPEAT ¥_tac); 
a(LEMMA_T¨d = (Fst d,Snd d)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],asm_rewrite_tac[hideR_def,deleteQuery_def,changeSpec_def]]);
a(DROP_NTH_ASM_T 23(strip_asm_tac o rewrite_rule[hideR_def,rel_ext_clauses]));
a(REPEAT strip_tac);
(* *** Goal "3.2.2.1" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst d)Æasm_tac);
(* *** Goal "3.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst d)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst d), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.2.1.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
(* *** Goal "3.2.2.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 25(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst d)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.2.1.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory(Dir_tables y
                             ´ {(Last (Fst d),
                                 replaceRows
                                     y'
                                     (Extract
                                         (1 .. Length (TS_rows y')
                                             \ revealRow câ2 y' Image Snd d
                                               ° {i
                                               |R_exist (Nth (TS_rows y') i)
                                                   = câ2})
                                         (TS_rows y')))})
                         (Dir_exist y)
                         (Dir_class y)ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
(* *** Goal "3.2.2.1.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'
                       (Extract
                           (1 .. Length (TS_rows y')
                               \ revealRow câ2 y' Image Snd d
                                 ° {i|R_exist (Nth (TS_rows y') i) = câ2})
                           (TS_rows y'))Æ THEN asm_rewrite_tac[]);
a(fc_tac[delete_ax]THEN asm_fc_tac[]); (****SHOULD BE THEOREM****)
a(spec_nth_asm_tac 7 ¨Snd dÆ);
(* *** Goal "3.2.2.1.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.2.1.1.2.2.1.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'''
                   (Extract
                       (1 .. Length (TS_rows y''')
                           \ revealRow câ2 y''' Image Snd d
                             ° {i|R_exist (Nth (TS_rows y''') i) = câ2})
                       (TS_rows y'''))Æ THEN asm_rewrite_tac[]);
a(fc_tac[delete_ax]THEN asm_fc_tac[]); (****SHOULD BE THEOREM****)
a(spec_nth_asm_tac 7 ¨Snd dÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.2.1.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2" *** *)
a(rewrite_tac[´_single]);
a(CASES_T¨x = Front (Fst d)Æasm_tac);
(* *** Goal "3.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 7(asm_tac o list_µ_elim[¨Front(Fst d)Æ,¨cleanDirectory câ1 y''Æ]));
a(LEMMA_T¨(∂ z
             ∑ (câ1 dominates Dir_exist z ± (Front (Fst d), z) ç repState sâ1)
                 ± cleanDirectory câ1 y'' = cleanDirectory câ1 z)Æasm_tac);
(* *** Goal "3.2.2.2.1.1" *** *)
a(∂_tac¨y''ÆTHEN asm_rewrite_tac[]);
a(fc_tac[dominates_trans] THEN asm_fc_tac[]);
(* *** Goal "3.2.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(lemma_tac¨z' = yÆ);
(* *** Goal "3.2.2.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 25(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨Front (Fst d)Æ,¨z'Æ,¨yÆ]));
(* *** Goal "3.2.2.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T (strip_asm_tac o rewrite_rule[cleanDirectory_def,get_spec¨MkDirectoryÆ,dir_components]));
a(∂_tac¨MkDirectory (Dir_tables y''
                             ´ {(Last (Fst d),
                                 replaceRows
                                     y'''
                                     (Extract
                                         (1 .. Length (TS_rows y''')
                                             \ revealRow câ2 y''' Image Snd d
                                               ° {i
                                               |R_exist (Nth (TS_rows y''') i)
                                                   = câ2})
                                         (TS_rows y''')))})
                         (Dir_exist y'')
                         (Dir_class y'')ÆTHEN asm_rewrite_tac[get_spec¨MkDirectoryÆ]);
a(lemma_tac¨câ1 dominates Dir_exist yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(rewrite_tac[cleanDirectory_def]);
a(lemma_tac¨câ1 dominates Dir_class y''Æ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(asm_rewrite_tac[get_spec¨MkDirectoryÆ,dir_components]);
a(lemma_tac¨câ1 dominates Dir_class yÆ THEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(DROP_NTH_ASM_T 6 ante_tac THEN asm_rewrite_tac[rel_ext_clauses]THEN ¥_tac);
a(rewrite_tac[´_single]);
a(REPEAT µ_tac THEN §_T asm_tac);
(* *** Goal "3.2.2.2.1.2.2.1" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.1.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'''
                   (Extract
                       (1 .. Length (TS_rows y''')
                           \ revealRow câ2 y''' Image Snd d
                             ° {i|R_exist (Nth (TS_rows y''') i) = câ2})
                       (TS_rows y'''))Æ THEN asm_rewrite_tac[]);
a(fc_tac[delete_ax]THEN asm_fc_tac[]); (****SHOULD BE THEOREM****)
a(spec_nth_asm_tac 7 ¨Snd dÆ THEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.1.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.2" *** *)
a(cases_tac¨x' = Last (Fst d)ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.2.1" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(∂_tac¨replaceRows y'
                       (Extract
                           (1 .. Length (TS_rows y')
                               \ revealRow câ2 y' Image Snd d
                                 ° {i|R_exist (Nth (TS_rows y') i) = câ2})
                           (TS_rows y'))Æ THEN asm_rewrite_tac[]);
a(fc_tac[delete_ax]THEN asm_fc_tac[]); (****SHOULD BE THEOREM****)
a(spec_nth_asm_tac 7 ¨Snd dÆ);
(* *** Goal "3.2.2.2.1.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 strip_asm_tac);
a(DROP_NTH_ASM_T 4 (asm_tac o list_µ_elim[¨x'Æ,¨cleanTable câ1 z''Æ]));
a(LEMMA_T¨∂ z ∑ (x', z) ç Dir_tables y''
                 ± cleanTable câ1 z'' = cleanTable câ1 zÆasm_tac);
(* *** Goal "3.2.2.2.1.2.2.2.2.1" *** *)
a(∂_tac¨z''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.1.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'''ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 3(strip_asm_tac o rewrite_rule[´_single,get_spec¨MkDirectoryÆ,dir_components]));
a(DROP_NTH_ASM_T 5(asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ2)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "3.2.2.2.2.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.2.2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(∂_tac¨z'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "3.2.3" *** *)
(* *** Update *** *)
a(LIST_DROP_NTH_ASM_T[1,2,3,4,7](MAP_EVERY (fn _ => id_tac))); 
a(POP_ASM_T (strip_asm_tac o rewrite_rule[isUpdate_def]));
a(LIST_DROP_NTH_ASM_T[2,3,4,5,6,7](MAP_EVERY ante_tac) THEN POP_ASM_T rewrite_thm_tac);
a(rewrite_tac[destInsert_def,tabFromEffect_def,
	getTable_def,rewrite_rule[dom_def]tabExists_def]);
a(REPEAT strip_tac);
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ1ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ1Æ,¨Front (Fst u)Æ,¨y''Æ]at_thm));
a(strip_asm_tac (pure_rewrite_rule[get_spec¨isStateÆ,get_spec¨StateSÆ,ﬂ_def,°_def]
	(µ_elim¨sâ2ÆisState_lemma)));
a(strip_asm_tac(list_µ_elim[¨repState sâ2Æ,¨Front (Fst u)Æ,¨yÆ]at_thm));
a(LIST_DROP_NTH_ASM_T[7,8,9,10,11,12,13,15,16,17](MAP_EVERY ante_tac) 
	THEN GET_NTH_ASM_T 4 rewrite_thm_tac THEN TOP_ASM_T rewrite_thm_tac);
a(REPEAT ¥_tac);
a(DROP_NTH_ASM_T 16  ante_tac  THEN DROP_NTH_ASM_T 13  ante_tac  THEN
	rewrite_tac[™_def,get_spec¨IdeLÆ,get_spec¨DirectorySÆ,°_def,∏_def,
	get_spec¨UniverseÆ,dom_thm,rel_ext_clauses,get_spec¨$Æ]THEN REPEAT ¥_tac);
a(asm_fc_tac[]);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN rewrite_tac[ﬂ_def,°_def]
	THEN REPEAT ¥_tac);
a(strip_asm_tac(list_µ_elim[¨Dir_tables yÆ,¨Last (Fst u)Æ,¨y'Æ]at_thm));
a(strip_asm_tac(list_µ_elim[¨Dir_tables y''Æ,¨Last (Fst u)Æ,¨y'''Æ]at_thm));
a(LIST_DROP_NTH_ASM_T[9,10,11,12](MAP_EVERY ante_tac)THEN asm_rewrite_tac[]);
a(LIST_DROP_NTH_ASM_T[4,6,7,8](MAP_EVERY (fn _ => id_tac))THEN REPEAT ¥_tac); 



=TEX
=SML
push_goal([],¨µ câ1 câ2 tâ1 tâ2 ns ∑ 
	cleanTable câ1 tâ1 = cleanTable câ1 tâ2 
	± câ1 dominates câ2 ± câ2 dominates TS_class tâ1 
	¥
	cleanTable câ1 (replaceRows tâ1 
		(Extract (1 .. Length(TS_rows tâ1) \ 
	((revealRow câ2 tâ1) Image ns ° {i|R_exist(Nth(TS_rows tâ1)i) = câ2}))
	(TS_rows tâ1)))
	=
	cleanTable câ1 (replaceRows tâ2 
		(Extract (1 .. Length(TS_rows tâ2) \ 
	((revealRow câ2 tâ2) Image ns ° {i|R_exist(Nth(TS_rows tâ2)i) = câ2}))
	(TS_rows tâ2)))Æ);
a(REPEAT strip_tac);
a(lemma_tac¨cleanTable câ2 tâ1 = cleanTable câ2 tâ2Æ
	THEN_LIST[fc_tac[cleanTable_lemma]
	THEN asm_fc_tac[],id_tac]);
a(DROP_NTH_ASM_T 4 ante_tac THEN  
	rewrite_tac[cleanTable_def,replaceRows_def,get_spec¨MkTableSpecÆ]);
a(lemma_tac¨câ1 dominates TS_class tâ1ÆTHEN_LIST
	[fc_tac[dominates_trans] THEN asm_fc_tac[],asm_rewrite_tac[]]);
a(cases_tac¨câ1 dominates TS_class tâ2ÆTHEN asm_rewrite_tac[]);
set_labelled_goal"2";
(* *** Goal "2" *** *)
a(rewrite_tac[get_spec¨MkTableSpecÆ,tab_components,cleanColCons_def]THEN REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN DROP_NTH_ASM_T 5 rewrite_thm_tac);
a(asm_rewrite_tac[]);
(* *** Goal "1" *** *)
a(¥_T(strip_asm_tac o rewrite_rule[get_spec¨MkTableSpecÆ,tab_components]));
a(DROP_NTH_ASM_T 8 ante_tac THEN asm_rewrite_tac[cleanTable_def]);
a(GET_NTH_ASM_T 8 ante_tac THEN GET_NTH_ASM_T 5 rewrite_thm_tac THEN ¥_tac
	THEN asm_rewrite_tac[get_spec¨MkTableSpecÆ,tab_components] THEN strip_tac);
a(POP_ASM_T ante_tac THEN lemma_tac¨cleanColCons câ2 tâ1 = cleanColCons câ2 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 3(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 2(fn _ => id_tac)]);
a(asm_rewrite_tac[] THEN ¥_tac);
a(fc_tac[cleanRows_size_lemma]);
a(lemma_tac¨cleanColCons câ1 tâ1 = cleanColCons câ1 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 8(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 7(fn _ => id_tac)]);
a(POP_ASM_T ante_tac THEN rewrite_tac[cleanColCons_def,revealRow_def,get_spec¨MkTableSpecÆ]);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 5 (fn _ => id_tac) THEN DROP_NTH_ASM_T 4 (fn _ => id_tac));
a(DROP_NTH_ASM_T 5 ante_tac THEN DROP_NTH_ASM_T 3 ante_tac);
a(rewrite_tac[cleanRows_def]);
a(lemma_tac¨∂ lâ1 ∑ TS_rows tâ1 = lâ1ÆTHEN_LIST
	[prove_∂_tac,POP_ASM_T rewrite_thm_tac]);
a(lemma_tac¨∂ lâ2 ∑ TS_rows tâ2 = lâ2ÆTHEN_LIST
	[prove_∂_tac,POP_ASM_T rewrite_thm_tac]);
a(intro_µ_tac(¨lâ2Æ,¨lâ2Æ));
a(REV_LIST_INDUCTION_T¨lâ1Æasm_tac);
(* *** Goal "1.1" *** *)
a(rewrite_tac[map_def]THEN REPEAT strip_tac);
a(fc_tac[˘_extract_null_thm]);
a(spec_nth_asm_tac 1¨(1 .. Length lâ2
                         \ Squash
                               (Id
                                   (Dom
                                       (ListRel lâ2
                                           í {r|câ2 dominates R_exist r})))
                             Image ns
                           ° {i|R_exist (Nth lâ2 i) = câ2})Æ);
a(asm_rewrite_tac[extract_def,rel_list_null_thm]);
(* *** Goal "1.2" *** *)
a(REPEAT µ_tac);
a(intro_µ_tac(¨lastÆ,¨lastÆ)THEN REV_LIST_INDUCTION_T¨lâ2Æasm_tac);
(* *** Goal "1.2.1" *** *)
a(µ_tac THEN cases_tac¨câ1 dominates R_exist lastÆTHEN asm_rewrite_tac[map_def,extract_Î_single_ax]
	THEN REPEAT strip_tac);
a(CASES_T¨Length lâ1 + 1
                         ç 1 .. Length (lâ1 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last]) i) = câ2}Ærewrite_thm_tac);
(* *** Goal "1.2.1.1" *** *)
a(fc_tac[˘_extract_null_thm]);
a(spec_nth_asm_tac 1¨(1 .. Length (lâ1 Î [last])
                             \ Squash
                                   (Id
                                       (Dom
                                           (ListRel (lâ1 Î [last])
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (lâ1 Î [last]) i) = câ2})Æ);
a(asm_rewrite_tac[extract_def,rel_list_null_thm]);
(* *** Goal "1.2.1.2" *** *)
a(fc_tac[˘_extract_null_thm]);
a(spec_nth_asm_tac 1¨(1 .. Length (lâ1 Î [last])
                             \ Squash
                                   (Id
                                       (Dom
                                           (ListRel (lâ1 Î [last])
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (lâ1 Î [last]) i) = câ2})Æ);
a(asm_rewrite_tac[extract_def,rel_list_null_thm]);
(* *** Goal "1.2.2" *** *)
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac THEN asm_rewrite_tac[cleanColCons_def]THEN REPEAT ¥_tac);
a(REPEAT µ_tac THEN cases_tac¨câ1 dominates R_exist lastÆTHEN 
	cases_tac¨câ1 dominates R_exist last'Æ THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1" *** *)
a(REPEAT ¥_tac);
a(rewrite_tac[extract_Î_single_ax]);
a(CASES_T¨Length lâ1 + 1
                         ç 1 .. Length (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æ 
	asm_tac THEN TOP_ASM_T rewrite_thm_tac THEN CASES_T¨Length lâ2 + 1
                         ç 1 .. Length (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æ
	 asm_tac THEN TOP_ASM_T rewrite_thm_tac);
die;




a(DROP_NTH_ASM_T 3 ante_tac THEN cases_tac¨câ2 dominates R_exist lastÆ
	THEN cases_tac¨câ2 dominates R_exist last'Æ 
	THEN asm_rewrite_tac[size_list_rel_Î_í_ax]);
(* *** Goal "1.2.2.1.1" *** *)
a(¥_tac THEN DROP_NTH_ASM_T 9(ante_tac o µ_elim¨lâ2Æ) THEN DROP_NTH_ASM_T 8(fn _ => id_tac) 
	THEN asm_rewrite_tac[extract_Î_single_ax] THEN ¥_tac);


(* *** Goal "1.2.2.1.1.1" *** *)
a(asm_rewrite_tac[]);

(* *** Goal "1.2.2.1.1.1" *** *)
a(POP_ASM_T (fn _ => id_tac));
a(asm_rewrite_tac[squash_Î_ax,length_Î_one_thm,dot_dot_def,image_¿_thm,¿_°_thm,image_single_thm]);
a(fc_tac[size_squash_id_dom_thm]);
a(POP_ASM_T rewrite_thm_tac);
a(cases_tac¨Size(Squash (Id (Dom(ListRel lâ2 í {r|câ2 dominates R_exist r}))))
                             + 1 ç nsÆ THEN asm_rewrite_tac[]);
a(rewrite_tac[image_def]THEN REPEAT strip_tac);
(* *** Goal "1.2.2.1.1.1.1.1" *** *)
a(spec_nth_asm_tac 4 ¨xÆ);



,extract_Î_single_ax,
	squash_Î_ax,length_Î_one_thm,dot_dot_def,image_¿_thm,¿_°_thm



a(LEMMA_T¨Length lâ1 + 1
                         ç {i|1 º i ± i º Length lâ1 + 1}
                           \ Squash
                                   (Id
                                       (Dom
                                           (ListRel lâ1
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}
                             ¿ {(Size
                                           (Squash
                                               (Id
                                                   (Dom
                                                       (ListRel lâ1
                                                           í {r
                                                           |câ2
           dominates R_exist r}))))
                                         + 1, Length lâ1 + 1)}
                                 Image ns
                               ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}
	§
	Length lâ2 + 1
                         ç {i|1 º i ± i º Length lâ2 + 1}
                           \ Squash
                                   (Id
                                       (Dom
                                           (ListRel lâ2
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}
                             ¿ {(Size
                                           (Squash
                                               (Id
                                                   (Dom
                                                       (ListRel lâ2
                                                           í {r
                                                           |câ2
           dominates R_exist r}))))
                                         + 1, Length lâ2 + 1)}
                                 Image ns
                               ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Æasm_tac);
set_labelled_goal"1.2.2.1.1.2";
a(CASES_T¨Length lâ1 + 1
               ç {i|1 º i ± i º Length lâ1 + 1}
                 \ Squash
                         (Id (Dom (ListRel lâ1 í {r|câ2 dominates R_exist r})))
                       Image ns
                     ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}
                   ¿ {(Size
                                 (Squash
                                     (Id
                                         (Dom
                                             (ListRel lâ1
                                                 í {r
                                                 |câ2 dominates R_exist r}))))
                               + 1, Length lâ1 + 1)}
                       Image ns
                     ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Æasm_tac);
(* *** Goal "1.2.2.1.1.2.1" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[] THEN ¥_T rewrite_thm_tac);
a(POP_ASM_T rewrite_thm_tac THEN POP_ASM_T rewrite_thm_tac);
a(asm_rewrite_tac[extract_def]);
a(LEMMA_T¨({i|1 º i ± i º Length lâ1 + 1}
                               \ Squash
                                       (Id
                                           (Dom
                                               (ListRel lâ1
                                                   í {r
                                                   |câ2 dominates R_exist r})))
                                     Image ns
                                   ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}
                                 ¿ {(Size
                                               (Squash
                                                   (Id
                                                       (Dom
                                                           (ListRel lâ1
           í {r|câ2 dominates R_exist r}))))
                                             + 1, Length lâ1 + 1)}
                                     Image ns
                                   ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}
                             Ú ListRel lâ1)=({i|1 º i ± i º Length lâ2 + 1}
                               \ Squash
                                       (Id
                                           (Dom
                                               (ListRel lâ2
                                                   í {r
                                                   |câ2 dominates R_exist r})))
                                     Image ns
                                   ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}
                                 ¿ {(Size
                                               (Squash
                                                   (Id
                                                       (Dom
                                                           (ListRel lâ2
           í {r|câ2 dominates R_exist r}))))
                                             + 1, Length lâ2 + 1)}
                                     Image ns
                                   ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}
                             Ú ListRel lâ2)Ærewrite_thm_tac);



(* *** Goal "1.2.2.1.1.1" *** *)
a(POP_ASM_T (fn _ => id_tac));
a(fc_tac[size_squash_id_dom_thm]);
a(POP_ASM_T rewrite_thm_tac);
a(REPEAT strip_tac);



a(cases_tac¨Size(Squash (Id(Dom(ListRel lâ1 í {r|câ2 dominates R_exist r}))))
                                       + 1 ç nsÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1.1" *** *)
a(TOP_ASM_T


,image_single_thm


a(REPEAT µ_tac THEN cases_tac¨câ2 dominates R_exist lastÆTHEN 
	cases_tac¨câ2 dominates R_exist last'Æ THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1" *** *)
a(lemma_tac¨câ1 dominates R_exist last ± câ1 dominates R_exist last'Æ);
(* *** Goal "1.2.2.1.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]THEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.2" *** *)
a(asm_rewrite_tac[]THEN strip_tac);
a(DROP_NTH_ASM_T 8(ante_tac o µ_elim¨lâ2Æ) THEN DROP_NTH_ASM_T 7(fn _ => id_tac) 
	THEN strip_tac);

(* *** Goal "1.2.2.1" *** *)
a(cases_tac¨câ1 dominates R_exist last'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.2.1.1" *** *)
a strip_tac;
a(DROP_NTH_ASM_T 7 (ante_tac o µ_elim¨lâ2Æ)THEN asm_rewrite_tac[]);
a strip_tac;
a(asm_rewrite_tac[extract_Î_single_ax,squash_Î_ax,length_Î_one_thm,
	dot_dot_def,image_¿_thm,¿_°_thm,image_single_thm]);






a(LEMMA_T¨µ l (last:Row)∑Length l + 1
                         ç {i|1 º i ± i º Length l + 1}
                           \ Squash
                                   (Id
                                       (Dom
                                           (ListRel l
                                               í {r|câ2 dominates R_exist r})))
                                 Image ns
                               ° {i|R_exist (Nth (l Î [last]) i) = câ2}
                             ¿ {(Size
                                           (Squash
                                               (Id
                                                   (Dom
                                                       (ListRel l
                                                           í {r
                                                           |câ2
           dominates R_exist r}))))
                                         + 1, Length l + 1)}
                                 Image ns
                               ° {i|R_exist (Nth (l Î [last]) i) = câ2}Ærewrite_thm_tac);
(* *** Goal "1.2.2.1.1.1" *** *)
a(REPEAT strip_tac);
a(POP_ASM_T(asm_tac o rewrite_rule[nth_length_one_thm]));
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[]);

a(REPEAT strip_tac THEN POP_ASM_T(asm_tac o rewrite_rule[nth_length_one_thm])
	THEN DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[]);



a(CASES_T¨Length lâ1 + 1
                         ç 1 .. Length (lâ1 Î [last'])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ1 Î [last'])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ1 Î [last']) i) = câ2}Ærewrite_thm_tac
	THEN CASES_T¨Length lâ2 + 1
                         ç 1 .. Length (lâ2 Î [last])
                           \ Squash
                                 (Id
                                     (Dom
                                         (ListRel (lâ2 Î [last])
                                             í {r|câ2 dominates R_exist r})))
                               Image ns
                             ° {i|R_exist (Nth (lâ2 Î [last]) i) = câ2}Ærewrite_thm_tac
	THEN_TRY asm_rewrite_tac[]);


a(REV_LIST_INDUCTION_T¨dsÆasm_tac);
(* *** Goal "1.1" *** *)
a(rewrite_tac[map_def,˘_def]);
(* *** Goal "1.2" *** *)
a(rewrite_tac[map_Î_thm,˘_thm,get_spec¨MkRowÆ]);
a(µ_tac THEN GET_NTH_ASM_T 8 rewrite_thm_tac);
(****Need to change definition of colDefaults :

πHOLCONST
‹	€colDefaults› :  Class ≠ TableSpec ≠ (Num ™ Data) ≠  (Num™ Data)
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µ  clear : Class; ts : TableSpec; ds : Num ™ Data
‹	∑	colDefaults clear ts ds
‹		=
‹		ds ´ {(n,d)|∂c ∑ ≥ c ç visibleCols clear ts ± n = CS_posn c ± d = CS_default c}
∞
****)
a(LEMMA_T¨cleanRow
                 câ1
                 {col
                   |∂ y
                     ∑ câ1 dominates CC_exist y
                         ± (CS_consGroup col, y) ç TS_cons tâ1}
                 (MkRow câ2 (last
        ´ {(n, d)|∂ c∑ (≥ c ç  visibleCols câ2 tâ1) ± n = CS_posn c ± d = CS_default c}))
               = cleanRow
                 câ1
                 {col
                   |∂ y
                     ∑ câ1 dominates CC_exist y
                         ± (CS_consGroup col, y) ç TS_cons tâ2}
                 (MkRow câ2 (last
        ´ {(n, d)|∂ c∑ (≥ c ç visibleCols câ2 tâ2) ± n = CS_posn c ± d = CS_default c}))Æasm_rewrite_thm_tac);
(* *** Goal "1.2.1" *** *)
a(POP_ASM_T (fn _ => id_tac));
a(POP_ASM_T(strip_asm_tac o rewrite_rule[rel_ext_clauses,í_thm]));
a(asm_rewrite_tac[colDefaults_def,cleanColCons_def,visibleCols_def,cleanRow_def,
	get_spec¨MkRowÆ,row_components,rel_ext_clauses,filterRow_def]);
a(REPEAT strip_tac);
(* *** Goal "1.2.1.1" *** *)
a(cases_tac¨≥ x ç Dom{(n, d)
               |∂ c
                 ∑ ≥ (∂ y
                       ∑ câ2 dominates CC_exist y
                           ± (CS_consGroup c, y) ç TS_cons tâ1)
                     ± n = CS_posn c
                     ± d = CS_default c}Æ);
(* *** Goal "1.2.1.1.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
(* *** Goal "1.2.1.1.1.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.1.1.1.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.1.1.1.2" *** *)
a ≤_left_tac;
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨y''Æ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(∂_tac¨y'''ÆTHEN asm_rewrite_tac[]);
a(lemma_tac¨câ1 dominates CC_exist y'''Æ);
(* *** Goal "1.2.1.1.1.1.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.1.1.1.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y'''Æ]);
(* *** Goal "1.2.1.1.1.2" *** *)
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨zÆ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(spec_nth_asm_tac 7 ¨y''Æ);
(* *** Goal "1.2.1.1.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.1.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.1.2.2" *** *)
a ≤_right_tac;
a(∂_tac¨c'ÆTHEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨y''Æ);
a contr_tac;
a(lemma_tac¨câ1 dominates CC_exist y''Æ);
(* *** Goal "1.2.1.1.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.1.2.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y''Æ]);
(* *** Goal "1.2.1.2" *** *)
a(cases_tac¨≥ x ç Dom{(n, d)
               |∂ c
                 ∑ ≥ (∂ y
                       ∑ câ2 dominates CC_exist y
                           ± (CS_consGroup c, y) ç TS_cons tâ2)
                     ± n = CS_posn c
                     ± d = CS_default c}Æ);
(* *** Goal "1.2.1.2.1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
(* *** Goal "1.2.1.2.1.1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.2.1.1.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.2.1.1.2" *** *)
a ≤_left_tac;
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨y''Æ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(∂_tac¨y'''ÆTHEN asm_rewrite_tac[]);
a(lemma_tac¨câ1 dominates CC_exist y'''Æ);
(* *** Goal "1.2.1.2.1.1.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.2.1.1.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y'''Æ]);
(* *** Goal "1.2.1.2.1.2" *** *)
a(DROP_NTH_ASM_T 4(strip_asm_tac o rewrite_rule[dom_def]));
a(spec_nth_asm_tac 1 ¨zÆ);
a(spec_nth_asm_tac 1 ¨c'Æ);
a(spec_nth_asm_tac 7 ¨y''Æ);
(* *** Goal "1.2.1.2.2" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[´_thm]);
a(rewrite_tac[´_thm] THEN strip_tac);
a(∂_tac¨zÆTHEN asm_rewrite_tac[] THEN strip_tac);
(* *** Goal "1.2.1.2.2.1" *** *)
a(∂_tac¨cÆTHEN asm_rewrite_tac[]);
a(∂_tac¨y'ÆTHEN asm_rewrite_tac[]);
(* *** Goal "1.2.1.2.2.2" *** *)
a ≤_right_tac;
a(∂_tac¨c'ÆTHEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
a(spec_nth_asm_tac 4 ¨y''Æ);
a contr_tac;
a(lemma_tac¨câ1 dominates CC_exist y''Æ);
(* *** Goal "1.2.1.2.2.2.1" *** *)
a(fc_tac[dominates_trans]THEN asm_fc_tac[]);
(* *** Goal "1.2.1.2.2.2.2" *** *)
a(list_spec_nth_asm_tac 13 [¨CS_consGroup c'Æ,¨y''Æ]);




val €insertRows_lemma› = save_pop_thm"insertRows_lemma";





a(LEMMA_T¨u = (Fst u,Snd u)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],asm_rewrite_tac[hideR_def,updateQuery_def,changeSpec_def]]);
a(DROP_NTH_ASM_T 23(strip_asm_tac o rewrite_rule[hideR_def,rel_ext_clauses]));
a(REPEAT strip_tac);








a(push_goal([],¨µ c i sâ1 sâ2 ∑ tabExists c i sâ1 ± tabExists c i sâ2 
	¥ (Dir_exist (sâ1 @ Front i) = Dir_exist (sâ2 @ Front i)
	± Dir_class (sâ1 @ Front i) = Dir_class (sâ2 @ Front i))Æ);



a(lemma_tac¨y = zÆ);
(* *** Goal "3.2.1.1.1.1" *** *)
a(DROP_NTH_ASM_T 14 ante_tac THEN TOP_ASM_T (rewrite_thm_tac o eq_sym_rule)
	THEN strip_tac); 
a(DROP_NTH_ASM_T 14(asm_tac o rewrite_rule[functional_def]));
a(POP_ASM_T (strip_asm_tac o list_µ_elim[¨xÆ,¨yÆ,¨zÆ]));





a(LEMMA_T¨u = (Fst u,Snd u)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[insertQuery_def]]);

(rewrite_tac[hideR_def,rel_ext_clauses]);
a(REPEAT strip_tac);

=TEX
=SML
push_goal([],¨µ câ1 câ2 tâ1 tâ2 sâ1 sâ2 u
	∑ câ1 dominates câ2
	± câ2 dominates TS_class tâ1
        ± câ2 dominates TS_class tâ2
        ± cleanTable câ1 tâ1 = cleanTable câ1 tâ2
		¥ hideR (câ1,insertQuery (câ2, u, repState sâ1, tâ1))
		 = hideR (câ1,insertQuery (câ2, u, repState sâ2, tâ2))Æ);
a(REPEAT strip_tac);
a(LEMMA_T¨u = (Fst u,Snd u)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[insertQuery_def]]);
a(rewrite_tac[changeSpec_def,hideR_def,rel_ext_clauses]);




(* *** Goal "1" *** *)
a(∂_tac¨zÆTHEN asm_rewrite_tac[]);

a(rewrite_tac[hideR_def,rel_ext_clauses]THEN REPEAT strip_tac);



a(POP_ASM_T ante_tac);
a(lemma_tac¨cleanColCons câ2 tâ1 = cleanColCons câ2 tâ2Æ 
	THEN_LIST[pure_once_asm_rewrite_tac[prove_rule[pair_clauses]
	¨µ p  ∑ p = (Fst p, Snd p)Æ]THEN asm_rewrite_tac[],
	DROP_NTH_ASM_T 3(fn _ => id_tac) 
	THEN  DROP_NTH_ASM_T 2(fn _ => id_tac)]);
a(TOP_ASM_T rewrite_thm_tac THEN ¥_tac);
a(strip_asm_tac(list_µ_elim[¨câ2Æ,¨tâ1Æ,¨tâ2Æ]cleanRows_size_lemma));
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac);
a(LEMMA_T¨u = (Fst u,Snd u)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[insertQuery_def]]);






=SML
push_goal([],¨µ câ1 câ2 sâ1 sâ2 e
        ∑ hideR (câ1, repState sâ1) = hideR (câ1, repState sâ2) ± câ1 dominates câ2
            ¥ hideR (câ1, Fst (updateStateR (câ2, e, repState sâ1)))
              = hideR (câ1, Fst (updateStateR (câ2, e, repState sâ2)))Æ);
a(rewrite_tac[hideR_def]);
a(rewrite_tac[rel_ext_clauses]THEN REPEAT strip_tac);
(* *** Goal "1" *** *)
a(DROP_NTH_ASM_T 5 (asm_tac o list_µ_elim[¨xÆ,¨cleanDirectory câ1 zÆ]));
a(LEMMA_T¨∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z'Æasm_tac);
(* *** Goal "1.1" *** *)
a(∂_tac¨zÆ THEN asm_rewrite_tac[]);
=GFT HOL output
(* *** Goal "1.1" *** *)

(*  5 *)  ¨câ1 dominates câ2Æ
(*  4 *)  ¨câ1 dominates Dir_exist zÆ
(*  3 *)  ¨(x, z) ç Fst (updateStateR (câ2, e, repState sâ1))Æ
(*  2 *)  ¨y = cleanDirectory câ1 zÆ
(*  1 *)  ¨(∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ1)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z')
             § (∂ z'
             ∑ (câ1 dominates Dir_exist z' ± (x, z') ç repState sâ2)
                 ± cleanDirectory câ1 z = cleanDirectory câ1 z')Æ

(* ?Ù *)  ¨(x, z) ç repState sâ1Æ
=TEX
set_labelled_goal"1.2";
(* *** Goal "1.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a ¥_tac;
a(∂_tac¨z'Æ THEN asm_rewrite_tac[]);
=GFT HOL output
(* *** Goal "1.2" *** *)

(*  7 *)  ¨câ1 dominates câ2Æ
(*  6 *)  ¨câ1 dominates Dir_exist zÆ
(*  5 *)  ¨(x, z) ç Fst (updateStateR (câ2, e, repState sâ1))Æ
(*  4 *)  ¨y = cleanDirectory câ1 zÆ
(*  3 *)  ¨câ1 dominates Dir_exist z'Æ
(*  2 *)  ¨(x, z') ç repState sâ2Æ
(*  1 *)  ¨cleanDirectory câ1 z = cleanDirectory câ1 z'Æ

(* ?Ù *)  ¨(x, z') ç Fst (updateStateR (câ2, e, repState sâ2))Æ
=TEX

set_labelled_goal"2";


=TEX


\subsection{Proof Strategy}\label{STRATEGY}

We prove that if $updateStateR$ maintains the invariant
on the representation state, then $hide$  and $updateState$ satisfy the relation
$secureUpdate$.
=SML
push_goal([],
	¨((µ câ1 câ2 sâ1 sâ2 e
        ∑ hideR (câ1, repState sâ1) = hideR (câ1, repState sâ2) ± câ1 dominates câ2
            ¥ hideR (câ1, Fst (updateStateR (câ2, e, repState sâ1)))
              = hideR (câ1, Fst (updateStateR (câ2, e, repState sâ2)))) 
	± µ clear s u ∑ isState s ¥ isState(Fst(updateStateR(clear,u,s)))) 
	¥ (hide,updateState) ç secureUpdateÆ);
a(REPEAT strip_tac THEN rewrite_tac[conjunct4,secureUpdate_def,hide_def]);
a(LEMMA_T¨(µ c sâ1 sâ2 e
             ∑ absState (hideR (c, repState sâ1))
                   = absState (hideR (c, repState sâ2))
                 ¥ Snd (updateState (c, e, sâ1)) = Snd (updateState (c, e, sâ2)))Æ
	rewrite_thm_tac);
=TEX
=SML
(* *** Goal "1" *** *)
a(REPEAT strip_tac);
a(strip_asm_tac(µ_elim¨sâ1ÆisState_lemma));
a(strip_asm_tac(µ_elim¨sâ2ÆisState_lemma));
a(bc_tac[conjunct3,eq_sym_rule(all_µ_elim hide_eq_lemma)]);
a(fc_tac[hideR_lemma]);
a(spec_nth_asm_tac 2 ¨cÆ);
a(spec_nth_asm_tac 2 ¨cÆ);
a(strip_asm_tac(list_µ_elim[¨hideR (c, repState sâ1)Æ,¨hideR (c, repState sâ2)Æ]isState_lemma2));
=TEX
=SML
(* *** Goal "2" *** *)
a(LEMMA_T¨µ câ1 câ2 sâ1 sâ2 e
             ∑ absState (hideR (câ1, repState sâ1))
                     = absState (hideR (câ1, repState sâ2))
                   ± câ1 dominates câ2
                 ¥ absState
                     (hideR (câ1, repState (Fst (updateState (câ2, e, sâ1)))))
                   = absState
                     (hideR (câ1, repState (Fst (updateState (câ2, e, sâ2)))))Æ
	rewrite_thm_tac);
=TEX
=SML
(* *** Goal "2.1" *** *)
a(REPEAT strip_tac);
a(strip_asm_tac(µ_elim¨sâ2ÆisState_lemma));
a(strip_asm_tac(µ_elim¨sâ1ÆisState_lemma));
a(fc_tac[hideR_lemma]);
a(spec_nth_asm_tac 2 ¨câ1Æ);
a(spec_nth_asm_tac 2 ¨câ1Æ);
a(strip_asm_tac(list_µ_elim[¨hideR (câ1, repState sâ1)Æ,¨hideR (câ1, repState sâ2)Æ]isState_lemma2));
a(LEMMA_T¨e = (Fst e,Snd e)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[updateState_def]]);
a(list_spec_nth_asm_tac 10[¨câ2Æ,¨repState sâ1Æ,¨eÆ]);
a(list_spec_nth_asm_tac 11[¨câ2Æ,¨repState sâ2Æ,¨eÆ]);
a(list_spec_nth_asm_tac 13[¨câ1Æ,¨câ2Æ,¨sâ1Æ,¨sâ2Æ,¨eÆ]);(**should be conjunct2**)
a(fc_tac[isState_lemma1]THEN asm_rewrite_tac[]);
=TEX
=SML
(* *** Goal "2.2" *** *)
a(REPEAT strip_tac);
a(strip_asm_tac(µ_elim¨sÆisState_lemma));
a(fc_tac[hideR_lemma]);
a(spec_nth_asm_tac 1 ¨câ2Æ);
a(DROP_NTH_ASM_T 4 ante_tac);
a(LEMMA_T¨e = (Fst e,Snd e)Æ pure_once_asm_rewrite_thm_tac 
	THEN_LIST[rewrite_tac[],rewrite_tac[updateState_def]]);
a(asm_fc_tac[]);
a(list_spec_nth_asm_tac 2[¨câ1Æ,¨eÆ]);
a(fc_tac[hideR_lemma]);
a(spec_nth_asm_tac 1 ¨câ2Æ);
a(fc_tac[isState_lemma1]THEN asm_rewrite_tac[]);
a(¥_tac THEN swap_nth_asm_concl_tac 1);
a(strip_asm_tac(list_µ_elim[¨hideR (câ2, repState s)Æ,
	¨hideR (câ2, Fst (updateStateR (câ1, e, repState s)))Æ]isState_lemma2));
a(fc_tac[conjunct1]);
val €updateStateR_updateState_lemma› = save_pop_thm"updateStateR_updateState_lemma";
=TEX


\newpage
\input{fef012th.tex}

\newpage
\twocolumn[\section{INDEX} \label{INDEX}]
\small
\printindex

\end{document}


\section{CONSISTENCY PROOFS}
\subsection{Retrieving the Remaining Definitions of Constants}

\subsection{Axioms}
=SML
val €squash_¿_ax1› =  new_axiom(["squash_¿_ax1"],¨µ r x y∑ (µ n ∑ n ç Dom r ¥ x > n) 
	¥  Squash(r ¿ {(x,y)})= Squash r ¿ {(# (Squash r) + 1,y)}Æ);
val €squash_¿_ax2› =  new_axiom(["squash_¿_ax2"],¨µ l s ∑  
	Squash(Id(Dom(ListRel l í s)) ¿ {(#(ListRel l í s) + 1, #(ListRel l í s) + 1)})
	=
	Squash(Id(Dom(ListRel l í s))) ¿ {(#(Squash(Id(Dom(ListRel l í s)))) + 1, #(ListRel l í s) + 1)}Æ);
=TEX
=SML	
val €list_rel_Î_Ú_ax› =  new_axiom(["list_rel_Î_Ú_ax"],
	¨µ l s x ∑ s Ú ListRel (l Î [x]) = 
		if Length l + 1 ç s then s Ú ListRel l ¿ {(Length l + 1,x)}
		else s Ú ListRel lÆ);
=TEX




=SML
push_goal([],¨µ l (last:Row) s (u : Ó ™ (Ó ™ Update)) ∑ 
	≥ Length l + 1 ç Dom (RelCombine
                               (InvRel(Squash (Id (Dom
                                          (ListRel l í s)))) ª u)
                               (ListRel (l Î [last])))Æ);
a(REPEAT µ_tac);
a(rewrite_tac[rel_combine_def,enumerate_def,r_ª_r_thm,inv_rel_def,dom_def,id_def,squash_def,
	list_rel_def,í_thm,Ú_thm,dot_dot_def,length_Î_one_thm,nth_length_one_thm]);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 7 ante_tac THEN asm_rewrite_tac[]);
val €length_one_dom_lemma› = save_pop_thm"length_one_dom_lemma";
=TEX
=SML
val €list_rel_´_ax› =  new_axiom(["list_rel_´_ax"],¨µ l s (us:Ó ™ (Ó ™ Update)) râ1 râ2 ∑ ∂ l'
           ∑ ListRel l ´ (RelCombine
                     (InvRel (Squash(Id(Dom
                                       (ListRel l í s)))) ª us)
                     (ListRel l) ª râ1) ª râ2
               = ListRel l'Æ);
=TEX
a(rewrite_tac[map_def]);
