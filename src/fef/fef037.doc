    $Date$ $Id$ %Z% 
sccs get fef037.doc pp_compile load_fef_files.sml
chmod u+x pp_compile
sieve sml < fef037.doc
cp fef.mkf makefile
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPtitle{FEF Makefile}
\TPPref{DS/FMU/FEF/037}
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}

\TPPdate{\FormatDate{$Date$%
}}
\TPPproject{DRA FRONT END FILTER PROJECT}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Standard}
\TPPkeywords{}
\TPPauthor{G.~M.~Prout & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
%\TPPauthorisation{R.B.~Jones & HAT Manager}
\TPPabstract{This document gives the implementation for the makefile for the
DRA front end filter project RSRE 1C/6130.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	HAT FEF File \\
	Simon Wiseman
}}
%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%\def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\newfont{\icllogo}{icllogo50}
\def\TPPheadlhs{$\vcenter{\halign{##\cr\icllogo ICL\cr}}$}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\newpage
\section {DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
%\listoftables
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,fef}

\subsection{Changes History}
\begin{description}
\item[\SCCSversion ({\FormatDate{$Date$%
}})]
Re-worked to use the script $pp\_compile$
\end{description}
\subsection{Changes Forecast}
\pagebreak

\section{GENERAL}

\subsection{Scope}
This document produces a makefile for the DRA front end filter project RSRE 1C/6130. The use of the UNIX $make$ facility is identified as a requirement
for this project in the `` Project Overview Document '', \cite{DS/FMU/FEF/001}.


\subsection{Introduction}

This document contains the literate script of a makefile. 
\section{MAKEFILE}

To produce the makefile, enter 
=GFT
sccs get fef037.doc pp_compile load_fef_files.sml
chmod u+x pp_compile
sieve sml < fef037.doc
=TEX

=DUMP fef.mkf
# $Id$ %Z%
# Built from fef037.doc
#
#	A makefile for fef
#
#	For documentation refer to document DS/FMU/FEF/037.
=TEX

This list of options will be dumped to the screen if the
makefile $fef.mkf$ is called with no arguments. 

=DUMP mkf.help

Read fef037.doc for a full description of this makefile.

f.dvi		make a dvi file with three passes from "f.doc"
f.dvio	make a dvi file without reloading the theory
f.prt		print "f.dvi" using pstex
f.th		creates a theory in a hol database using file f.sml
fef.db	build the initial fef database
fefsml.db	load the SML query transformations and output filter
makefile	extracts fef.mkf and copies to "makefile"
allth		make all hol theories for phase 1 and 2
fef009.th	make all hol theories up to phase 1 unwinding result	
fef015.th	make all phase 1 hol theories 	
fef036.th	make all phase 2 hol theories 	
alldvi	make all .dvi files
allprt	print all .dvi files
all		allth  alldvi
listall	produces a dvi file of a complete theory listing
fef.mkf	extracts makefile from fef037.doc as fef.mkf
=TEX
=DUMPMORE fef.mkf
€default› : 
	cat mkf.help
=TEX

\subsection{Definitions}


=DUMPMORE fef.mkf
# files for which no theory will be created
FEFDOCS		= fef001.doc fef002.doc fef037.doc fef016.doc fef018.doc \
				fef041.doc fef045.doc fef046.doc fef047.doc
# files which produce SML specifications	
FEFSMLDOCS	= fef019.doc fef020.doc fef023.doc fef044.doc
# files which produce hol theories	
FEFTHYDOCS	= fef003.doc fef004.doc fef005.doc fef014.doc fef006.doc \
				fef007.doc fef009.doc fef010.doc fef011.doc fef012.doc \
				fef013.doc fef015.doc fef022.doc fef024.doc fef021.doc \
				fef025.doc fef028.doc fef029.doc fef026.doc fef032.doc \
				fef034.doc fef031.doc fef033.doc fef035.doc fef036.doc \
				fef040.doc fef042.doc fef043.doc
# external work files from PP 0.4
XWRKDOCS		= wrk044.doc wrk046.doc
# work files which are not part of PP 0.4
WRKDOCS		= wrk049.doc wrk057.doc
ALLFEFDOCS 	= $(FEFDOCS) $(FEFSMLDOCS) $(FEFTHYDOCS)
# all fef sml files 
FEFSMLFILES 	= $(FEFTHYDOCS:.doc=.sml) $(FEFSMLDOCS:.doc=.sml)
# all files which may be printed by this makefile
PRTFILES 		= $(ALLFEFDOCS:.doc=.prt)   
# files which will be kept under sccs control
SCCSFILES		= $(ALLFEFDOCS) $(WRKDOCS) \
			 fef030.doc fef030_slides.doc fef017.doc fef.bib

# Set the make variable INSTALLDIR to the environment variable $INSTALLDIR
# which should be set to the pp installation directory before calling make.
# alternatively, edit the makefile so that INSTALLDIR is set to the pp
# installation directory.

INSTALLDIR:sh	= echo $INSTALLDIR
ARCH:sh		= echo `arch`
HOL			= pp_hol
FEF 			= fef
HOLDB 		= $(ARCH)hol.db
FEFDB 		= $(ARCH)fef.db
WDIR:sh		= echo `pwd`
DIR			= /hat/projects/fef
SDIR			= $(DIR)/SCCS
SCCSGET		= sccs -d $(DIR) get
=TEX

\subsection{Processing Documents Which Have No Associated Theory Listing}

These documents will only be processed by \LaTeX.
=DUMPMORE fef.mkf
FEFTEX = $(FEFSMLDOCS:.doc=.tex) $(FEFDOCS:.doc=.tex)
FEFDVI = $(FEFSMLDOCS:.doc=.dvi) $(FEFDOCS:.doc=.dvi)
FEFDVIO = $(ALLFEFDOCS:.doc=.dvio)

$(FEFTEX) : $$(@:.tex=.doc)
	doctex $(@:.tex=)

%.dvi : $$(@:.dvi=.tex) fef.bib
	texdvi $(@:.dvi=)
	- bibtex $(@:.dvi=)
	texdvi $(@:.dvi=)
	texdvi $(@:.dvi=)

$(FEFDVIO) : $$(@:.dvio=.tex) fef.bib 
	texdvi $(@:.dvio=)
	
=TEX

\subsection{Processing Theory Documents}
These documents all create SML files. Those which create hol
theories create theory listings to be included in the \LaTeX{} processing.
=DUMPMORE fef.mkf
ALLSML = $(FEFSMLFILES) $(XWRKDOCS:.doc=.sml) $(WRKDOCS:.doc=.sml)
THYTEX = $(FEFTHYDOCS:.doc=.tex) 

$(ALLSML) : $$(@:.sml=.doc)
	docsml $(@:.sml=)

$(THYTEX) : $$(@:.tex=.doc)
	doctex $(@:.tex=)
	
THYDVI = $(FEFTHYDOCS:.doc=.dvi) wrk057.dvi

$(THYDVI) : $$(@:.dvi=.tex) fef.bib $$(@:.dvi=th.doc) 
	doctex $(@:.dvi=)th
	texdvi $(@:.dvi=)
	- bibtex $(@:.dvi=)
	texdvi $(@:.dvi=)
	texdvi $(@:.dvi=)
	
=TEX

\subsection{Fetching External Documents}

The work files wrk044.doc and wrk046.doc are to be found in the installation directory,
not in the fef SCCS directory.

=DUMPMORE fef.mkf

wrk044.doc : 
	cp $(INSTALLDIR)/docs/wrk044.doc $(WDIR)

wrk046.doc : 
	cp $(INSTALLDIR)/docs/wrk046.doc $(WDIR)
=TEX
\subsection{Rules}

Pattern matching rules.

=DUMPMORE fef.mkf
.SUFFIXES: .prt  

%.prt: %.dvi
	pstex $*
=TEX
Produce a theory listing.
=DUMPMORE fef.mkf
%th.doc: %.th
	hol_list -d $(FEF) $* > $*th.doc
	
%.tex: %.doc
	doctex $*
	
=TEX

\subsection{SCCS}

Get any necessary files from SCCS control.
Note that the SCCS directory is the project directory, not necessarily "./SCCS".

=DUMPMORE fef.mkf
$(SCCSFILES) : $(DIR)/SCCS/s.$$@
	$(SCCSGET) $@
=TEX

\subsection{Makefile}

Extract a new version of fef.mkf from fef037.doc. 

=DUMPMORE fef.mkf
€fef.mkf› : fef037.doc pp_compile load_fef_files.sml
	chmod u+x pp_compile
	sieve sml < fef037.doc

# copy the makefile $fef.mkf$ to $makefile$

€makefile› : fef.mkf
	cp fef.mkf makefile
=TEX

\subsection{Making Databases}

The following entry makes a new initial fef database. The sml files 
$wrk044.sml$, $wrk046.sml$ and $wrk049.sml$ are created from the 
corresponding work file documents
and loaded into a \ProductHOL\ database. ($db\_made$ acts as a flag
signalling whether the initial fef database has been created.)

=DUMPMORE fef.mkf
db_made : wrk044.sml wrk046.sml wrk049.sml
	pp_make_database -f -p $(HOL)#fin_set $(FEF)#cache_thms
	pp_compile -d $(FEF) -i load_fef_files -c wrk044.sml,wrk046.sml,wrk049.sml
	touch db_made

#	the target command for the initial fef database

€fef.db› : db_made
=TEX

This entry loads the SML  specifications
of the SSQL query transformations and output filter into
a \ProductHOL\ database.

=DUMPMORE fef.mkf
# Create a database with just the SML query transformations and output filter
smldb_made :  fef019.sml fef020.sml fef023.sml
	pp_make_database -f -p $(HOL) fefsml 
	pp_compile -d fefsml -c fef019.sml,fef020.sml,fef023.sml
	touch smldb_made

#	the target command for the sml database

€fefsml.db› : smldb_made
=TEX


\subsection{Creating Theories}

This section records dependencies between theories.
=DUMPMORE fef.mkf
fef003.th: fef003.sml db_made
	pp_compile -d $(FEF) -i load_fef_files -c fef003.sml
	touch fef003.th

fef004.th: fef004.sml fef003.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef004.sml
	touch fef004.th

fef005.th: fef005.sml fef004.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef005.sml
	touch fef005.th

fef014.th: fef014.sml fef005.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef014.sml
	touch fef014.th

fef006.th: fef006.sml fef014.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef006.sml
	touch fef006.th

fef007.th: fef007.sml fef006.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef007.sml
	touch fef007.th

fef009.th: fef009.sml fef007.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef009.sml
	touch fef009.th

fef010.th: fef010.sml fef009.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef010.sml
	touch fef010.th

fef011.th: fef011.sml fef010.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef011.sml
	touch fef011.th

fef012.th: fef012.sml fef011.th 
	pp_compile -d $(FEF) -i load_fef_files -c fef012.sml
	touch fef012.th

fef013.th: fef013.sml fef012.th
	pp_compile -d $(FEF) -i load_fef_files -c fef013.sml
	touch fef013.th

fef015.th: fef015.sml fef013.th
	pp_compile -d $(FEF) -i load_fef_files -c fef015.sml
	touch fef015.th

fef022.th: fef022.sml fef006.th
	pp_compile -d $(FEF) -i load_fef_files -c fef022.sml
	touch fef022.th

fef024.th: fef024.sml fef022.th
	pp_compile -d $(FEF) -i load_fef_files -c fef024.sml
	touch fef024.th

fef021.th: fef021.sml fef024.th
	pp_compile -d $(FEF) -i load_fef_files -c fef021.sml
	touch fef021.th

fef025.th: fef025.sml fef021.th
	pp_compile -d $(FEF) -i load_fef_files -c fef025.sml
	touch fef025.th

fef028.th: fef028.sml fef025.th
	pp_compile -d $(FEF) -i load_fef_files -c fef028.sml
	touch fef028.th

fef029.th: fef029.sml fef028.th
	pp_compile -d $(FEF) -i load_fef_files -c fef029.sml
	touch fef029.th

fef026.th: fef026.sml fef029.th
	pp_compile -d $(FEF) -i load_fef_files -c fef026.sml
	touch fef026.th

fef032.th: fef032.sml fef026.th
	pp_compile -d $(FEF) -i load_fef_files -c fef032.sml
	touch fef032.th

fef034.th: fef034.sml fef032.th
	pp_compile -d $(FEF) -i load_fef_files -c fef034.sml
	touch fef034.th

fef031.th: fef031.sml fef026.th fef034.th
	pp_compile -d $(FEF) -i load_fef_files -c fef031.sml
	touch fef031.th

fef033.th: fef033.sml fef032.th fef031.th
	pp_compile -d $(FEF) -i load_fef_files -c fef033.sml
	touch fef033.th

fef035.th: fef035.sml fef033.th
	pp_compile -d $(FEF) -i load_fef_files -c fef035.sml
	touch fef035.th

fef036.th: fef036.sml fef035.th
	pp_compile -d $(FEF) -i load_fef_files -c fef036.sml
	touch fef036.th

fef040.th: fef040.sml fef003.th fef010.th
	pp_compile -d $(FEF) -i load_fef_files -c fef040.sml
	touch fef040.th

fef042.th: fef042.sml fef040.th fef036.th wrk057.th
	pp_compile -d $(FEF) -i load_fef_files -c fef042.sml
	touch fef042.th

fef043.th: fef043.sml fef042.th
	pp_compile -d $(FEF) -i load_fef_files -c fef043.sml
	touch fef043.th

fef044.th: fef044.sml fef043.th
	pp_compile -d $(FEF) -i load_fef_files -c fef044.sml
	discgarb -d $(FEFDB)
	touch fef044.th

wrk057.th: wrk057.sml db_made
	pp_compile -d $(FEF) -i load_fef_files -c wrk057.sml
	touch wrk057.th

=TEX

\subsection{Making Documents}

=DUMPMORE fef.mkf

fef045.dvi:	wrk057th.tex fef040th.tex fef042th.tex fef043th.tex
	doctex $(@:.dvi=)th
	texdvi $(@:.dvi=)
	- bibtex $(@:.dvi=)
	texdvi $(@:.dvi=)
	texdvi $(@:.dvi=)

=TEX

\subsection{Omnibus Entries}

In general the entry {\tt}all {\it suffix} causes all files with suffix {\it suffix} to be created.

=DUMPMORE fef.mkf
€allth›	: $(FEFTHYDOCS:.doc=.th)
€allsml›	: $(ALLSML)
€alldoc›	: $(ALLFEFDOCS)
€alltex›	: $(FEFTEX) $(THYTEX)
€alldvi›	: $(FEFDVI) $(THYDVI)
€allprt›	: $(PRTFILES)

€all›	: allth  alldvi 
=TEX
\subsection{Processing Slides Documents}
Documents $fef030.doc$ and $fef030\_slides.doc$ create slides which
were produced for a presentation on the Phase I formal treatment.

=DUMPMORE fef.mkf
€fef030.dvi› : fef030.doc fef030_slides.doc
	doctex fef030 fef030_slides
	slitex fef030
=TEX
\subsection{Complete $fef$ Theory Listing}
Produce a dvi file which is a listing of all \Product{} and fef theories. 
This may be viewed by $dvipage\ fef017$.
=DUMPMORE fef.mkf
€listall› : fef017.doc
	hol_list -d fef `hol_list -d fef` > ! all_theories.doc&
	doctex all_theories
	doctex fef017
	texdvi fef017
	texdvi fef017
	texdvi fef017
=TEX
\subsection{Tidying up the Filestore}

Rule $texclean$ removes all recreatable \TeX{} and \LaTeX{}
files, i.e., those which
can be derived from the ".doc" files.

Rule $sccsclean$ removes files that can be obtained from sccs.

Rule $workclean$ removes work files that can be obtained from the installation directory.

Rule $derivedclean$ removes `{\tt *.sml}' and database files.

Rule $allclean$ removes all recreatable files, i.e., those which can be
derived from the SCCS directory or the installation directory, which 
is all of the above files.

=DUMPMORE fef.mkf
€allclean›: texclean sccsclean workclean derivedclean

€texclean› :
	rm -f $(PRTFILES:.prt=.dvi) fef030.dvi
	rm -f $(PRTFILES:.prt=.tex) fef030.tex fef030_slides.tex
	rm -f $(FEFTHYDOCS:.doc=th.tex)
	rm -f $(PRTFILES:.prt=.aux) fef030.aux
	rm -f $(PRTFILES:.prt=.log) fef030.log
	rm -f $(PRTFILES:.prt=.idx) fef030.idx
	rm -f $(PRTFILES:.prt=.sid) fef030.sid
	rm -f $(PRTFILES:.prt=.toc) fef030.toc
	rm -f $(PRTFILES:.prt=.bbl) fef030.bbl
	rm -f $(PRTFILES:.prt=.blg) fef030.blg
	rm -f $(PRTFILES:.prt=.lot) fef030.lot

€sccsclean› :
	sccs -d $(DIR) clean

€workclean› :
	rm -f $(XWRKDOCS)

€derivedclean› :
	rm -f $(FEFDB)  $(ARCH)fefsml.db
# must remove the dummy files which are "touched" when the fef and sml databases are made
	rm -f db_made smldb_made
	rm -f $(ALLSML)
	rm -f $(FEFTHYDOCS:.doc=.th) 
	rm -f $(FEFTHYDOCS:.doc=th.doc)

€texveryclean›:
	rm -f *.aux
	rm -f *.bbl
	rm -f *.blg
	rm -f *.dvi
	rm -f *.idx
	rm -f *.log
	rm -f *.sid
	rm -f *.tex
	rm -f *.toc
=TEX
\twocolumn[\section{INDEX} \label{INDEX}]
\small
\printindex

\end{document}
 

